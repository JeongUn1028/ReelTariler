[{"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/index.js":"1","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/App.js":"2","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/contexts/bookMarkIds.js":"3","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/pages/UpComings.js":"4","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/pages/Otts.js":"5","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/pages/NowPlaying.js":"6","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/API/upComings.js":"7","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/API/nowPlayings.js":"8","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/API/otts.js":"9","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movie/Poster.js":"10","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movie/MovieModal.js":"11","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/API/getMovieKeys.js":"12","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/API/getMovieList.js":"13","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movie/PlayMovie.js":"14","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movie/BookModal.js":"15","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/API/apis.js":"16","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Header.js":"17","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Header/HeaderMovie.js":"18","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Header/HeaderNav.js":"19","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Movies.js":"20","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Footer.js":"21","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Select.js":"22","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Select/SelectLeft.js":"23","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Select/SelectRight.js":"24","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Select/rightCategory/Category.js":"25","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Select/rightCategory/SelectCate.js":"26"},{"size":414,"mtime":1681024815897,"results":"27","hashOfConfig":"28"},{"size":1012,"mtime":1685770168081,"results":"29","hashOfConfig":"28"},{"size":655,"mtime":1681025989309,"results":"30","hashOfConfig":"28"},{"size":2421,"mtime":1681200905989,"results":"31","hashOfConfig":"28"},{"size":2303,"mtime":1681200917965,"results":"32","hashOfConfig":"28"},{"size":4666,"mtime":1681277558518,"results":"33","hashOfConfig":"28"},{"size":221,"mtime":1688807023993,"results":"34","hashOfConfig":"28"},{"size":236,"mtime":1688806845930,"results":"35","hashOfConfig":"28"},{"size":400,"mtime":1688806925162,"results":"36","hashOfConfig":"28"},{"size":7359,"mtime":1685774846021,"results":"37","hashOfConfig":"28"},{"size":8026,"mtime":1685769906290,"results":"38","hashOfConfig":"28"},{"size":260,"mtime":1681197027083,"results":"39","hashOfConfig":"28"},{"size":249,"mtime":1688806891678,"results":"40","hashOfConfig":"28"},{"size":572,"mtime":1680264324179,"results":"41","hashOfConfig":"28"},{"size":4304,"mtime":1685772026101,"results":"42","hashOfConfig":"28"},{"size":277,"mtime":1679121920216,"results":"43","hashOfConfig":"28"},{"size":422,"mtime":1679129697832,"results":"44","hashOfConfig":"28"},{"size":210,"mtime":1681276928196,"results":"45","hashOfConfig":"28"},{"size":1206,"mtime":1681108145422,"results":"46","hashOfConfig":"28"},{"size":253,"mtime":1680339012210,"results":"47","hashOfConfig":"28"},{"size":583,"mtime":1680338500265,"results":"48","hashOfConfig":"28"},{"size":413,"mtime":1678782327272,"results":"49","hashOfConfig":"28"},{"size":1918,"mtime":1681277163956,"results":"50","hashOfConfig":"28"},{"size":409,"mtime":1678782332413,"results":"51","hashOfConfig":"28"},{"size":467,"mtime":1680856665114,"results":"52","hashOfConfig":"28"},{"size":1036,"mtime":1681045788147,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r2xsz0",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/index.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/App.js",[],[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/contexts/bookMarkIds.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/pages/UpComings.js",["138","139","140","141","142","143","144","145","146","147","148","149"],[],"import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { upComings } from '../API/upComings';\nimport dayjs from 'dayjs';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-flow: row wrap;\n  margin-left: 40px;\n`;\n\nconst Img = styled.img`\n  width: 200px;\n  height: 260px;\n`;\n\nconst Title = styled.p`\n  width: 240px;\n  color: white;\n  word-wrap: normal;\n  text-align: center;\n  padding-right: 50px;\n  margin-top: 10px;\n`;\n\nconst Div = styled.div`\n  width: 218px;\n  height: 300px;\n  margin: 8px 8px 20px 8px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  text-align: center;\n`;\n\nconst UpComings = () => {\n  const [upcoming, setUpcoming] = useState({});\n  const [movieId, setMovieId] = useState({});\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [overView, setOverView] = useState('');\n  const [realese, setRealese] = useState('');\n  const [gerne, setGerne] = useState([]);\n  const [voteRate, setVoteRate] = useState(0);\n  const [modal, setModal] = useState(false);\n\n  const later = dayjs().add(14, 'd').format('YYYY-MM-DD');\n  const today = dayjs().format('YYYY-MM-DD');\n  const ago = dayjs().subtract(14, 'd').format('YYYY-MM-DD');\n\n  const getUpComings = useCallback(() => {\n    upComings().then((res) => {\n      setUpcoming(res);\n    });\n  }, []);\n\n  useEffect(() => {\n    getUpComings();\n  }, []);\n  return (\n    <Wrapper>\n      {upcoming === false ? (\n        <h2>Loading...</h2>\n      ) : (\n        upcoming.results?.map((e) => {\n          if (e.release_date <= later) {\n            return (\n              <Div key={e.id}\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉예정일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })\n      )}\n    </Wrapper>\n  );\n};\n\nexport default UpComings;\n","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/pages/Otts.js",["150"],[],"import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { otts } from '../API/otts';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-flow: row wrap;\n  margin-left: 40px;\n`;\n\nconst Img = styled.img`\n  width: 200px;\n  height: 260px;\n`;\n\nconst Title = styled.p`\n  width: 240px;\n  color: white;\n  word-wrap: normal;\n  text-align: center;\n  padding-right: 50px;\n  margin-top: 10px;\n`;\n\nconst Div = styled.div`\n  width: 218px;\n  height: 300px;\n  margin: 8px 8px 20px 8px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  text-align: center;\n`;\n\nconst Otts = () => {\n  const [netflix, setNetflix] = useState({});\n  const [wavve, setWavve] = useState({});\n  const [diseny, setDiseny] = useState({});\n  const getOtts = useCallback(() => {\n    //netflix\n    otts(8).then((res) => {\n      setNetflix(res);\n    });\n    //diseny\n    otts(337).then((res) => {\n      setDiseny(res);\n    });\n    //wavve\n    otts(356).then((res) => {\n      setWavve(res);\n    });\n  }, []);\n  useEffect(() => {\n    getOtts();\n  }, []);\n  return (\n    <Wrapper>\n      {netflix === false ? (\n        <h1>Loading...</h1>\n      ) : (\n        netflix.results?.map((e) => (\n          <Div key={e.videoId}>\n            <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n            <Title>\n              OTT : NETFLIX\n              <br />\n              제목 : {e.name}\n            </Title>\n          </Div>\n        ))\n      )}\n      {wavve === false ? (\n        <h1>Loading...</h1>\n      ) : (\n        wavve.results?.map((e) => (\n          <Div key={e.videoId}>\n            <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n            <Title>\n              OTT : WAVVE\n              <br />\n              제목 : {e.name}\n            </Title>\n          </Div>\n        ))\n      )}\n      {diseny === false ? (\n        <h1>Loading...</h1>\n      ) : (\n        diseny.results?.map((e) => (\n          <Div key={e.videoId}>\n            <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n            <Title>\n              OTT : WAVVE\n              <br />\n              제목 : {e.name}\n            </Title>\n          </Div>\n        ))\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Otts;\n","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/pages/NowPlaying.js",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166"],[],"import React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { nowPlayings } from '../API/nowPlayings';\nimport dayjs from 'dayjs';\nimport MovieModal from '../components/movie/MovieModal';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-flow: row wrap;\n  margin-left: 40px;\n`;\nconst Div = styled.div`\n  width: 218px;\n  height: 300px;\n  margin: 8px 8px 20px 8px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  text-align: center;\n`;\nconst Img = styled.img`\n  width: 200px;\n  height: 260px;\n`;\n\nconst Title = styled.p`\n  width: 240px;\n  color: white;\n  word-wrap: normal;\n  text-align: center;\n  padding-right: 50px;\n  margin-top: 10px;\n`;\n\nconst NowPlaying = () => {\n  const [nowPlay, setNowPlay] = useState({});\n  const [nowPlay1, setNowPlay1] = useState({});\n  const [nowPlay2, setNowPlay2] = useState({});\n  const [nowPlay3, setNowPlay3] = useState({});\n\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [overView, setOverView] = useState('');\n  const [realese, setRealese] = useState('');\n  const [gerne, setGerne] = useState([]);\n  const [voteRate, setVoteRate] = useState(0);\n  const [modal, setModal] = useState(false);\n  const [movieId, setMovieId] = useState({});\n\n  const later = dayjs().add(14, 'd').format('YYYY-MM-DD');\n  const today = dayjs().format('YYYY-MM-DD');\n  const ago = dayjs().subtract(14, 'd').format('YYYY-MM-DD');\n\n  const getNowPlayings = useCallback(() => {\n    nowPlayings(1).then((res) => {\n      setNowPlay1(res);\n    });\n\n    nowPlayings(2).then((res) => {\n      setNowPlay2(res);\n    });\n\n    nowPlayings(3).then((res) => {\n      setNowPlay3(res);\n    });\n  }, []);\n  useEffect(() => {\n    getNowPlayings();\n  }, []);\n  return (\n    <Wrapper>\n      {nowPlay1 === false ? (\n        <h2>Loading...</h2>\n      ) : (\n        nowPlay1.results?.map((e) => {\n          if (ago <= e.release_date && e.release_date <= today) {\n            return (\n              <Div\n                key={e.id}\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })\n      )}\n      {nowPlay2 === false ? (\n        <h2>Loading...</h2>\n      ) : (\n        nowPlay2.results?.map((e) => {\n          if (ago <= e.release_date && e.release_date <= today) {\n            return (\n              <Div\n                key={e.id}\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })\n      )}\n      {nowPlay3 === false ? (\n        <h2>Loading...</h2>\n      ) : (\n        nowPlay3.results?.map((e) => {\n          if (ago <= e.release_date && e.release_date <= today) {\n            return (\n              <Div\n                key={e.id}\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })\n      )}\n    </Wrapper>\n  );\n};\n\nexport default NowPlaying;\n","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/API/upComings.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/API/nowPlayings.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/API/otts.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movie/Poster.js",["167","168","169","170"],[],"import React, { useCallback, useEffect, useState } from 'react';\n\nimport dayjs from 'dayjs';\nimport styled from 'styled-components';\n\nimport { upComings } from '../../API/upComings';\nimport { nowPlayings } from '../../API/nowPlayings';\n\nimport MovieModal from './MovieModal';\n\nimport { otts } from '../../API/otts';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-flow: row wrap;\n  margin-left: 40px;\n`;\n\nconst Img = styled.img`\n  width: 200px;\n  height: 260px;\n`;\n\nconst Title = styled.p`\n  width: 240px;\n  color: white;\n  word-wrap: normal;\n  text-align: center;\n  padding-right: 50px;\n  margin-top: 10px;\n`;\n\nconst Div = styled.div`\n  width: 218px;\n  height: 300px;\n  margin: 8px 8px 20px 8px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  text-align: center;\n`;\n\nconst Poster = () => {\n  //movies\n  const [upcoming, setUpcoming] = useState({});\n  const [nowPlay1, setNowPlay1] = useState({});\n  const [nowPlay2, setNowPlay2] = useState({});\n  const [nowPlay3, setNowPlay3] = useState({});\n  const [movieId, setMovieId] = useState({});\n  //otts\n  const [netflix, setNetflix] = useState({});\n  const [wavve, setWavve] = useState({});\n  const [diseny, setDiseny] = useState({});\n\n  const [modal, setModal] = useState(false);\n\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [overView, setOverView] = useState('');\n  const [realese, setRealese] = useState('');\n  const [gerne, setGerne] = useState([]);\n  const [voteRate, setVoteRate] = useState(0);\n\n  const later = dayjs().add(14, 'd').format('YYYY-MM-DD');\n  const today = dayjs().format('YYYY-MM-DD');\n  const ago = dayjs().subtract(14, 'd').format('YYYY-MM-DD');\n\n  const getUpComings = useCallback(() => {\n    upComings().then((res) => {\n      setUpcoming(res);\n    });\n  }, []);\n\n  const getNowPlayings = useCallback(() => {\n    nowPlayings(1).then((res) => {\n      setNowPlay1(res);\n    });\n\n    nowPlayings(2).then((res) => {\n      setNowPlay2(res);\n    });\n\n    nowPlayings(3).then((res) => {\n      setNowPlay3(res);\n    });\n  }, []);\n\n  const getOtts = useCallback(() => {\n    //netflix\n    otts(8).then((res) => {\n      setNetflix(res);\n    });\n    //diseny\n    otts(337).then((res) => {\n      setDiseny(res);\n    });\n    //wavve\n    otts(356).then((res) => {\n      setWavve(res);\n    });\n  }, []);\n\n  const close = () => {\n    setModal(false);\n  };\n\n  useEffect(() => {\n    getUpComings();\n    getNowPlayings();\n    getOtts();\n  });\n  return (\n    <Wrapper>\n       {upcoming === false ? (\n        <h2>Loading...</h2>\n      ) : (\n        upcoming.results?.map((e) => {\n          if (e.release_date <= later) {\n            return (\n              <Div\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉예정일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })\n      )}\n      {nowPlay1 === false ? (\n        <h2>Loading...</h2>\n      ) : (\n        nowPlay1.results?.map((e) => {\n          if (ago <= e.release_date && e.release_date <= today) {\n            return (\n              <Div\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })\n      )}\n      {nowPlay2 === false ? (\n        <h2>Loading...</h2>\n      ) : (\n        nowPlay2.results?.map((e) => {\n          if (ago <= e.release_date && e.release_date <= today) {\n            return (\n              <Div\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })\n      )}\n      {nowPlay3 === false ? (\n        <h2>Loading...</h2>\n      ) : (\n        nowPlay3.results?.map((e) => {\n          if (ago <= e.release_date && e.release_date <= today) {\n            return (\n              <Div\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })\n      )}\n      {netflix === false ? (\n        <h1>Loading...</h1>\n      ) : (\n        netflix.results?.map((e) => (\n          <Div key={e.videoId}>\n            <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n            <Title>OTT : NETFLIX<br/>제목 : {e.name}</Title>\n          </Div>\n        ))\n      )}\n      {wavve === false ? (\n        <h1>Loading...</h1>\n      ) : (\n        wavve.results?.map((e) => (\n          <Div key={e.videoId}>\n            <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n            <Title>OTT : WAVVE<br/>제목 : {e.name}</Title>\n          </Div>\n        ))\n      )}\n      {diseny === false ? (\n        <h1>Loading...</h1>\n      ) : (\n        diseny.results?.map((e) => (\n          <Div key={e.videoId}>\n            <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n            <Title>OTT : WAVVE<br/>제목 : {e.name}</Title>\n          </Div>\n        ))\n      )}\n      <MovieModal\n        open={modal}\n        title={title}\n        image={image}\n        videoId={movieId}\n        close={close}\n        overview={overView}\n        genre={gerne}\n        realese={realese}\n        voteRate={voteRate}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Poster;\n","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movie/MovieModal.js",["171","172"],["173"],"import React, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport { FaStar, FaRegStar } from 'react-icons/fa';\nimport PlayMovie from './PlayMovie';\nimport { getMovieList } from '../../API/getMovieList';\nimport MovieIdsContext from '../../contexts/bookMarkIds';\n\nconst modalStyle = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backdropFilter: 'blur(5px)',\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    width: '100%',\n    zIndex: 10,\n    overflow: 'hidden',\n    padding: '0px',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'black',\n    border: 'none',\n    color: 'white',\n    borderRadius: '20px',\n    overflowY: 'scroll',\n    WebkitOverflowScrolling: 'touch',\n    zIndex: 10,\n    width: '80%',\n    marginLeft: '150px',\n  },\n};\n\nconst ModalHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst Btn = styled.div`\n  text-align: center;\n  font-size: 30px;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst Plist = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\nconst PlistItems = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 10px 0px;\n  justify-content: left;\n  border: 2px solid rgba(255, 255, 255, 0.1);\n  border-radius: 10px;\n`;\nconst PlistItemsInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  text-align: center;\n  width: 100%;\n`;\nconst PlistItemsTitle = styled.div`\n  width: 100%;\n  color: white;\n  text-align: center;\n  padding-right: 40px;\n  word-wrap: normal;\n`;\nconst Img = styled.img`\n  width: 240px;\n  height: 160px;\n  padding-right: 45px;\n`;\nconst MiddleWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst Overview = styled.div`\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-left: 40px;\n`;\nconst MovieInfo = styled.div`\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n  margin-top: 15px;\n`;\nconst InfoList = styled.li`\n  margin: 15px;\n  list-style: none;\n`;\nconst Warning = styled.div`\n  color: red;\n`;\n\nconst MovieModal = (props) => {\n  const TMDBURL = 'https://api.themoviedb.org/3/movie';\n\n  // eslint-disable-next-line no-unused-vars\n  const [movieId, setMovieId] = useState([]);\n  const [bookmark, setBookmark] = useState(false);\n  const [headerMovie, setHeaderMovie] = useState('');\n  const [firstMovie, setFirstMovie] = useState({});\n  const [secMovie, setSecMovie] = useState({});\n  const [thirdMovie, setThirdMovie] = useState({});\n  const [fourMovie, setFourMovie] = useState({});\n  const [fifthMovie, setFifthMovie] = useState({});\n  const { movieIds, setMovieIds, deleteMovieId } = useContext(MovieIdsContext);\n  const getMovieKey = async () => {\n    let first;\n    let second;\n    let third;\n    let fourth;\n    let fifthx;\n    await fetch(`\n    ${TMDBURL}/${props.videoId}/videos?api_key=b69ce63df91b692b402e8436d1099819&language=en\n    `)\n      .then((res) => res.json())\n      .then((res) => {\n        first = res.results[0].key;\n        second = res.results[1].key;\n        third = res.results[2].key;\n        fourth = res.results[3].key;\n        fifthx = res.results[4].key;\n        setMovieId(() => res.results?.map((e) => e.key));\n      });\n    getMovieList(first).then((res) => setFirstMovie(res));\n    getMovieList(second).then((res) => setSecMovie(res));\n    getMovieList(third).then((res) => setThirdMovie(res));\n    getMovieList(fourth).then((res) => setFourMovie(res));\n    getMovieList(fifthx).then((res) => setFifthMovie(res));\n  };\n\n  useEffect(() => {\n    getMovieKey(props);\n    findGenre();\n    setHeaderMovie('');\n  }, [props]);\n\n  const initialGenre = [\n    { id: 28, name: '액션' },\n    { id: 12, name: '모험' },\n    { id: 16, name: '애니메이션' },\n    { id: 35, name: '코미디' },\n    { id: 80, name: '범죄' },\n    { id: 99, name: '다큐멘터리' },\n    { id: 18, name: '드라마' },\n    { id: 10751, name: '가족' },\n    { id: 14, name: '판타지' },\n    { id: 36, name: '역사' },\n    { id: 27, name: '공포' },\n    { id: 10402, name: '음악' },\n    { id: 9648, name: '미스테리' },\n    { id: 10749, name: '로맨스' },\n    { id: 878, name: '공상과학' },\n    { id: 10770, name: 'TV 영화' },\n    { id: 53, name: '스릴러' },\n    { id: 10752, name: '전쟁' },\n    { id: 37, name: '서부' },\n  ];\n\n  const findGenre = () => {\n    const newArr = [];\n    for (let i = 0; i < props.genre.length; i++) {\n      for (let y = 0; y < initialGenre.length; y++) {\n        props.genre[i] === initialGenre[y].id && newArr.push(initialGenre[y].name);\n      }\n    }\n    return newArr.toString();\n  };\n\n  // bookMark setting\n  const onClick = () => {\n    if (localStorage.getItem(props.videoId) === null) {\n      localStorage.setItem(props.videoId, JSON.stringify(props));\n      setBookmark(true);\n      setMovieIds((prev) => [...prev, props.videoId]);\n    } else {\n      console.log(movieIds);\n      localStorage.removeItem(props.videoId);\n      setBookmark(false);\n      deleteMovieId(props.videoId);\n    }\n  };\n  return (\n    <Modal\n      isOpen={props.open}\n      onRequestClose={() => {\n        props.close();\n      }}\n      ariaHideApp={false}\n      style={modalStyle}\n    >\n      <ModalHeader>\n        <Btn\n          onClick={() => {\n            onClick();\n          }}\n        >\n          {movieIds.includes(props.videoId) === false ? <FaRegStar /> : <FaStar />}\n        </Btn>\n        <PlayMovie videoId={headerMovie} />\n      </ModalHeader>\n      <MiddleWrapper>\n        <Overview>\n          <h1>줄거리</h1>\n          <div>{props.overview}</div>\n        </Overview>\n        <MovieInfo>\n          <ul>\n            <InfoList>제목: {props.title}</InfoList>\n            <InfoList>개봉일: {props.realese}</InfoList>\n            <InfoList>장르: {findGenre()}</InfoList>\n            <InfoList>평점: {props.voteRate}</InfoList>\n            {props.voteRate === 0 && <Warning>* 투표수가 낮으면 평점이 0 으로 표시될 수도 있습니다.</Warning>}\n          </ul>\n        </MovieInfo>\n      </MiddleWrapper>\n      <Plist>\n        {firstMovie.items?.map((e) => (\n          <PlistItems onClick={() => setHeaderMovie(e.id)}>\n            <Img src={e.snippet.thumbnails.medium.url}></Img>\n            <PlistItemsInfo>\n              <PlistItemsTitle>{e.snippet.title}</PlistItemsTitle>\n            </PlistItemsInfo>\n          </PlistItems>\n        ))}\n        {secMovie.items?.map((e) => (\n          <PlistItems onClick={() => setHeaderMovie(e.id)} key={e.etag}>\n            <Img src={e.snippet.thumbnails.medium.url}></Img>\n            <PlistItemsInfo>\n              <PlistItemsTitle>{e.snippet.title}</PlistItemsTitle>\n            </PlistItemsInfo>\n          </PlistItems>\n        ))}\n        {thirdMovie.items?.map((e) => (\n          <PlistItems onClick={() => setHeaderMovie(e.id)}>\n            <Img src={e.snippet.thumbnails.medium.url}></Img>\n            <PlistItemsInfo>\n              <PlistItemsTitle>{e.snippet.title}</PlistItemsTitle>\n            </PlistItemsInfo>\n          </PlistItems>\n        ))}\n        {fourMovie.items?.map((e) => (\n          <PlistItems onClick={() => setHeaderMovie(e.id)}>\n            <Img src={e.snippet.thumbnails.medium.url}></Img>\n            <PlistItemsInfo>\n              <PlistItemsTitle>{e.snippet.title}</PlistItemsTitle>\n            </PlistItemsInfo>\n          </PlistItems>\n        ))}\n        {fifthMovie.items?.map((e) => (\n          <PlistItems onClick={() => setHeaderMovie(e.id)}>\n            <Img src={e.snippet.thumbnails.medium.url}></Img>\n            <PlistItemsInfo>\n              <PlistItemsTitle>{e.snippet.title}</PlistItemsTitle>\n            </PlistItemsInfo>\n          </PlistItems>\n        ))}\n      </Plist>\n    </Modal>\n  );\n};\n\nexport default MovieModal;\n","/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/API/getMovieKeys.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/API/getMovieList.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movie/PlayMovie.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movie/BookModal.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/API/apis.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Header.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Header/HeaderMovie.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Header/HeaderNav.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Movies.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Footer.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Select.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Select/SelectLeft.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Select/SelectRight.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Select/rightCategory/Category.js",[],[],"/Users/ijeong-un/ReactProject/ReelTrailer/mymovie/src/components/movieComponent/Select/rightCategory/SelectCate.js",[],[],{"ruleId":"174","severity":1,"message":"175","line":40,"column":10,"nodeType":"176","messageId":"177","endLine":40,"endColumn":17},{"ruleId":"174","severity":1,"message":"178","line":41,"column":10,"nodeType":"176","messageId":"177","endLine":41,"endColumn":15},{"ruleId":"174","severity":1,"message":"179","line":42,"column":10,"nodeType":"176","messageId":"177","endLine":42,"endColumn":15},{"ruleId":"174","severity":1,"message":"180","line":43,"column":10,"nodeType":"176","messageId":"177","endLine":43,"endColumn":18},{"ruleId":"174","severity":1,"message":"181","line":44,"column":10,"nodeType":"176","messageId":"177","endLine":44,"endColumn":17},{"ruleId":"174","severity":1,"message":"182","line":45,"column":10,"nodeType":"176","messageId":"177","endLine":45,"endColumn":15},{"ruleId":"174","severity":1,"message":"183","line":46,"column":10,"nodeType":"176","messageId":"177","endLine":46,"endColumn":18},{"ruleId":"174","severity":1,"message":"184","line":47,"column":10,"nodeType":"176","messageId":"177","endLine":47,"endColumn":15},{"ruleId":"174","severity":1,"message":"185","line":50,"column":9,"nodeType":"176","messageId":"177","endLine":50,"endColumn":14},{"ruleId":"174","severity":1,"message":"186","line":51,"column":9,"nodeType":"176","messageId":"177","endLine":51,"endColumn":12},{"ruleId":"187","severity":1,"message":"188","line":61,"column":6,"nodeType":"189","endLine":61,"endColumn":8,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":67,"column":35,"nodeType":"193","messageId":"194","endLine":67,"endColumn":37},{"ruleId":"187","severity":1,"message":"195","line":57,"column":6,"nodeType":"189","endLine":57,"endColumn":8,"suggestions":"196"},{"ruleId":"174","severity":1,"message":"197","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":18},{"ruleId":"174","severity":1,"message":"198","line":38,"column":10,"nodeType":"176","messageId":"177","endLine":38,"endColumn":17},{"ruleId":"174","severity":1,"message":"199","line":38,"column":19,"nodeType":"176","messageId":"177","endLine":38,"endColumn":29},{"ruleId":"174","severity":1,"message":"178","line":43,"column":10,"nodeType":"176","messageId":"177","endLine":43,"endColumn":15},{"ruleId":"174","severity":1,"message":"179","line":44,"column":10,"nodeType":"176","messageId":"177","endLine":44,"endColumn":15},{"ruleId":"174","severity":1,"message":"180","line":45,"column":10,"nodeType":"176","messageId":"177","endLine":45,"endColumn":18},{"ruleId":"174","severity":1,"message":"181","line":46,"column":10,"nodeType":"176","messageId":"177","endLine":46,"endColumn":17},{"ruleId":"174","severity":1,"message":"182","line":47,"column":10,"nodeType":"176","messageId":"177","endLine":47,"endColumn":15},{"ruleId":"174","severity":1,"message":"183","line":48,"column":10,"nodeType":"176","messageId":"177","endLine":48,"endColumn":18},{"ruleId":"174","severity":1,"message":"184","line":49,"column":10,"nodeType":"176","messageId":"177","endLine":49,"endColumn":15},{"ruleId":"174","severity":1,"message":"175","line":50,"column":10,"nodeType":"176","messageId":"177","endLine":50,"endColumn":17},{"ruleId":"174","severity":1,"message":"200","line":52,"column":9,"nodeType":"176","messageId":"177","endLine":52,"endColumn":14},{"ruleId":"187","severity":1,"message":"201","line":71,"column":6,"nodeType":"189","endLine":71,"endColumn":8,"suggestions":"202"},{"ruleId":"191","severity":1,"message":"192","line":77,"column":35,"nodeType":"193","messageId":"194","endLine":77,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":106,"column":35,"nodeType":"193","messageId":"194","endLine":106,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":135,"column":35,"nodeType":"193","messageId":"194","endLine":135,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":119,"column":35,"nodeType":"193","messageId":"194","endLine":119,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":147,"column":35,"nodeType":"193","messageId":"194","endLine":147,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":175,"column":35,"nodeType":"193","messageId":"194","endLine":175,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":203,"column":35,"nodeType":"193","messageId":"194","endLine":203,"endColumn":37},{"ruleId":"174","severity":1,"message":"203","line":120,"column":10,"nodeType":"176","messageId":"177","endLine":120,"endColumn":18},{"ruleId":"187","severity":1,"message":"204","line":157,"column":6,"nodeType":"189","endLine":157,"endColumn":13,"suggestions":"205"},{"ruleId":"174","severity":1,"message":"175","line":119,"column":10,"nodeType":"176","messageId":"177","endLine":119,"endColumn":17,"suppressions":"206"},"no-unused-vars","'movieId' is assigned a value but never used.","Identifier","unusedVar","'image' is assigned a value but never used.","'title' is assigned a value but never used.","'overView' is assigned a value but never used.","'realese' is assigned a value but never used.","'gerne' is assigned a value but never used.","'voteRate' is assigned a value but never used.","'modal' is assigned a value but never used.","'today' is assigned a value but never used.","'ago' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUpComings'. Either include it or remove the dependency array.","ArrayExpression",["207"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'getOtts'. Either include it or remove the dependency array.",["208"],"'MovieModal' is defined but never used.","'nowPlay' is assigned a value but never used.","'setNowPlay' is assigned a value but never used.","'later' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNowPlayings'. Either include it or remove the dependency array.",["209"],"'bookmark' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'findGenre' and 'getMovieKey'. Either include them or remove the dependency array.",["210"],["211"],{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"kind":"220","justification":"221"},"Update the dependencies array to be: [getUpComings]",{"range":"222","text":"223"},"Update the dependencies array to be: [getOtts]",{"range":"224","text":"225"},"Update the dependencies array to be: [getNowPlayings]",{"range":"226","text":"227"},"Update the dependencies array to be: [findGenre, getMovieKey, props]",{"range":"228","text":"229"},"directive","",[1444,1446],"[getUpComings]",[1101,1103],"[getOtts]",[1789,1791],"[getNowPlayings]",[3881,3888],"[findGenre, getMovieKey, props]"]