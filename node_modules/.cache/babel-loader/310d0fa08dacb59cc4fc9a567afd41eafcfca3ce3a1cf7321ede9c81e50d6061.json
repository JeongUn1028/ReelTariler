{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/movie/Thumbnail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ids from \"../../channelId/ids\";\nimport { apiKey, YOUTUBEURL, PLAYLISTS } from \"../../API/apis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Div = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  display: flex;\n  flex-flow: wrap;\n  flex-direction: row;\n  justify-content: space-evenly;\n  text-align: left;\n`;\n_c = Div;\nconst Img = styled.img`\n  width: 240px;\n  height: 160px;\n  padding-right: 45px;\n`;\n_c2 = Img;\nconst Title = styled.p`\n  color:white;\n`;\n_c3 = Title;\nconst Thumbnail = () => {\n  _s();\n  var _playlist$items;\n  const [loading, setLoading] = useState(true);\n  const [playlist, setPlaylist] = useState([]);\n  const getPlaylist = async () => {\n    const json = await (await fetch(`${YOUTUBEURL}${PLAYLISTS}?key=${apiKey}&channelId=${ids.MavelKorea}&maxResults=50&part=snippet,contentDetails`)).json();\n    setPlaylist(json);\n    setLoading(false);\n    console.log(json);\n  };\n  useEffect(() => {\n    getPlaylist();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Div, {\n    children: (_playlist$items = playlist.items) === null || _playlist$items === void 0 ? void 0 : _playlist$items.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Img, {\n        src: e.snippet.thumbnails.medium.url,\n        alt: \"thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: e.snippet.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, e.etag, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Thumbnail, \"/lCb56Cvnuvr0pX6dPW+LnN4ZxE=\");\n_c4 = Thumbnail;\nexport default Thumbnail;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Div\");\n$RefreshReg$(_c2, \"Img\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Thumbnail\");","map":{"version":3,"names":["React","useEffect","useState","styled","ids","apiKey","YOUTUBEURL","PLAYLISTS","jsxDEV","_jsxDEV","Div","div","_c","Img","img","_c2","Title","p","_c3","Thumbnail","_s","_playlist$items","loading","setLoading","playlist","setPlaylist","getPlaylist","json","fetch","MavelKorea","console","log","children","items","map","e","src","snippet","thumbnails","medium","url","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","etag","_c4","$RefreshReg$"],"sources":["/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/movie/Thumbnail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ids from \"../../channelId/ids\";\nimport { apiKey, YOUTUBEURL, PLAYLISTS } from \"../../API/apis\";\n\nconst Div = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  display: flex;\n  flex-flow: wrap;\n  flex-direction: row;\n  justify-content: space-evenly;\n  text-align: left;\n`;\n\n\nconst Img = styled.img`\n  width: 240px;\n  height: 160px;\n  padding-right: 45px;\n`;\n\nconst Title = styled.p`\n  color:white;\n`\nconst Thumbnail = () => {\n  const [loading, setLoading] = useState(true);\n  const [playlist, setPlaylist] = useState([]);\n\n  const getPlaylist = async () => {\n    const json = await (\n      await fetch(\n        `${YOUTUBEURL}${PLAYLISTS}?key=${apiKey}&channelId=${ids.MavelKorea}&maxResults=50&part=snippet,contentDetails`\n      )\n    ).json();\n    setPlaylist(json);\n    setLoading(false);\n    console.log(json);\n  };\n\n  useEffect(() => {\n    getPlaylist();\n  }, []);\n\n  return (\n    <Div>\n      {playlist.items?.map((e) => (\n        <div key={e.etag}>\n            <Img\n              src={e.snippet.thumbnails.medium.url}\n              alt=\"thumbnail\"\n            ></Img>\n            <Title>{e.snippet.title}</Title>\n        </div>\n      ))}\n    </Div>\n  );\n};\nexport default Thumbnail;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,MAAM,EAAEC,UAAU,EAAEC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,GAAG,GAAGP,MAAM,CAACQ,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GATIF,GAAG;AAYT,MAAMG,GAAG,GAAGV,MAAM,CAACW,GAAI;AACvB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,GAAG;AAMT,MAAMG,KAAK,GAAGb,MAAM,CAACc,CAAE;AACvB;AACA,CAAC;AAAAC,GAAA,GAFKF,KAAK;AAGX,MAAMG,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMwB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CACR,GAAEtB,UAAW,GAAEC,SAAU,QAAOF,MAAO,cAAaD,GAAG,CAACyB,UAAW,4CAA2C,CAChH,EACDF,IAAI,EAAE;IACRF,WAAW,CAACE,IAAI,CAAC;IACjBJ,UAAU,CAAC,KAAK,CAAC;IACjBO,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACnB,CAAC;EAED1B,SAAS,CAAC,MAAM;IACdyB,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA,CAACC,GAAG;IAAAsB,QAAA,GAAAX,eAAA,GACDG,QAAQ,CAACS,KAAK,cAAAZ,eAAA,uBAAdA,eAAA,CAAgBa,GAAG,CAAEC,CAAC,iBACrB1B,OAAA;MAAAuB,QAAA,gBACIvB,OAAA,CAACI,GAAG;QACFuB,GAAG,EAAED,CAAC,CAACE,OAAO,CAACC,UAAU,CAACC,MAAM,CAACC,GAAI;QACrCC,GAAG,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACV,eACPpC,OAAA,CAACO,KAAK;QAAAgB,QAAA,EAAEG,CAAC,CAACE,OAAO,CAACS;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA,GAL1BV,CAAC,CAACY,IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAOjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACzB,EAAA,CAhCID,SAAS;AAAA6B,GAAA,GAAT7B,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAAP,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAA8B,GAAA;AAAAC,YAAA,CAAArC,EAAA;AAAAqC,YAAA,CAAAlC,GAAA;AAAAkC,YAAA,CAAA/B,GAAA;AAAA+B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}