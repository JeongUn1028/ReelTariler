{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { apiKey, PLAYLISTS, PLAYLISTSITEMS, VIDEOS, YOUTUBEURL } from \"../../API/apis\";\nimport YouTube from \"react-youtube\";\nimport ids from \"../../channelId/ids\";\nimport { useEffect } from \"react\";\nimport { playlistItems } from \"../../API/PlaylistItems\";\nimport { playlists } from \"../../API/Playlist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Div = styled.div`\n  width: 100%;\n  height: 500px;\n  background: white;\n  border: 1px solid red;\n`;\n_c = Div;\nconst Header = () => {\n  //   const [loading, setLoading] = useState(true);\n  //   const [playlists, setPlaylists] = useState([]);\n  //   console.log(\"HEAD\");\n  //   const getPlaylists = async () => {\n  //     const plist = await (\n  //       await fetch(\n  //         `${YOUTUBEURL}${PLAYLISTSITEMS}&part=id,snippet`\n  //       )\n  //     ).json();\n  //     setPlaylists(plist);\n  //     setLoading(false);\n  //   };\n  // //필요한것 -> video 의 id\n  //   const getVideos = async () => {\n  //     const vlist = await (\n  //         await fetch(\n  //             `${YOUTUBEURL}${VIDEOS}?key=${apiKey}&`\n  //         )\n  //     )\n  //   }\n\n  //   useEffect(() => {\n  //     getPlaylists();\n  //   }, []);\n  console.log(\"Headers\");\n  console.log(playlists());\n  return /*#__PURE__*/_jsxDEV(Div, {\n    children: /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: \"qT_fjEgPsaA\",\n      opts: {\n        width: \"100%\",\n        height: \"500px\",\n        playerVars: {\n          autoplay: 0,\n          //자동재생 O\n          modestbranding: 1 // 컨트롤 바에 youtube 로고를 표시하지 않음\n        }\n      }\n      //이벤트 리스너\n      ,\n      onEnd: e => {\n        e.target.stopVideo(0);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Header;\nexport default Header;\nvar _c, _c2;\n$RefreshReg$(_c, \"Div\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"names":["React","styled","useState","apiKey","PLAYLISTS","PLAYLISTSITEMS","VIDEOS","YOUTUBEURL","YouTube","ids","useEffect","playlistItems","playlists","jsxDEV","_jsxDEV","Div","div","_c","Header","console","log","children","videoId","opts","width","height","playerVars","autoplay","modestbranding","onEnd","e","target","stopVideo","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { apiKey, PLAYLISTS, PLAYLISTSITEMS, VIDEOS, YOUTUBEURL } from \"../../API/apis\";\nimport YouTube from \"react-youtube\";\nimport ids from \"../../channelId/ids\";\nimport { useEffect } from \"react\";\nimport { playlistItems } from \"../../API/PlaylistItems\";\nimport { playlists } from \"../../API/Playlist\";\n\nconst Div = styled.div`\n  width: 100%;\n  height: 500px;\n  background: white;\n  border: 1px solid red;\n`;\n\nconst Header = () => {\n//   const [loading, setLoading] = useState(true);\n//   const [playlists, setPlaylists] = useState([]);\n//   console.log(\"HEAD\");\n//   const getPlaylists = async () => {\n//     const plist = await (\n//       await fetch(\n//         `${YOUTUBEURL}${PLAYLISTSITEMS}&part=id,snippet`\n//       )\n//     ).json();\n//     setPlaylists(plist);\n//     setLoading(false);\n//   };\n// //필요한것 -> video 의 id\n//   const getVideos = async () => {\n//     const vlist = await (\n//         await fetch(\n//             `${YOUTUBEURL}${VIDEOS}?key=${apiKey}&`\n//         )\n//     )\n//   }\n\n//   useEffect(() => {\n//     getPlaylists();\n//   }, []);\nconsole.log(\"Headers\")\nconsole.log(playlists());\n\n  return (\n    <Div>\n      <YouTube\n        videoId=\"qT_fjEgPsaA\"\n        opts={{\n          width: \"100%\",\n          height: \"500px\",\n          playerVars: {\n            autoplay: 0, //자동재생 O\n            modestbranding: 1, // 컨트롤 바에 youtube 로고를 표시하지 않음\n          },\n        }}\n        //이벤트 리스너\n        onEnd={(e) => {\n          e.target.stopVideo(0);\n        }}\n      />\n    </Div>\n  );\n};\n\nexport default Header;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,SAAS,EAAEC,cAAc,EAAEC,MAAM,EAAEC,UAAU,QAAQ,gBAAgB;AACtF,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,SAAS,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,GAAG,GAAGd,MAAM,CAACe,GAAI;AACvB;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,GAAG;AAOT,MAAMG,MAAM,GAAGA,CAAA,KAAM;EACrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACAC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACtBD,OAAO,CAACC,GAAG,CAACR,SAAS,EAAE,CAAC;EAEtB,oBACEE,OAAA,CAACC,GAAG;IAAAM,QAAA,eACFP,OAAA,CAACN,OAAO;MACNc,OAAO,EAAC,aAAa;MACrBC,IAAI,EAAE;QACJC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,OAAO;QACfC,UAAU,EAAE;UACVC,QAAQ,EAAE,CAAC;UAAE;UACbC,cAAc,EAAE,CAAC,CAAE;QACrB;MACF;MACA;MAAA;MACAC,KAAK,EAAGC,CAAC,IAAK;QACZA,CAAC,CAACC,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC;MACvB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACC,GAAA,GA/CInB,MAAM;AAiDZ,eAAeA,MAAM;AAAC,IAAAD,EAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}