{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header/HeaderMovie.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PlayMovie from \"../../movie/PlayMovie\";\nimport styled from \"styled-components\";\nimport Player from \"../../movie/Player\";\nimport YouTube from \"react-youtube\";\n//\nimport { useState, useEffect } from \"react\";\nimport { YOUTUBEURL, PLAYLISTS, apiKey, PLAYLISTSITEMS } from \"../../../API/apis\";\n// UCSB5FOwUVnAhGo_o99IhxYA\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderMovie = () => {\n  _s();\n  var _plistItems$items;\n  // const channelId = \"UCSB5FOwUVnAhGo_o99IhxYA\";\n  // const Playlists = async () => {\n  //   const [playlists, setPlaylists] = useState([]);\n  //   const json = await (\n  //     await fetch(\n  //       `${YOUTUBEURL}${PLAYLISTS}?key=${apiKey}&channelId=UCSB5FOwUVnAhGo_o99IhxYA&maxResults=50&part=snippet`\n  //     )\n  //   ).json();\n  //   setPlaylists(json);\n  //   console.log(playlists);\n  // };\n  //\n  const [plistItems, setPlistItems] = useState(\"\");\n  const PlaylistItems = async () => {\n    const json = await (await fetch(`${YOUTUBEURL}${PLAYLISTSITEMS}?key=${apiKey}&playlistId=PL9ArOU7415dI9obxf4d-5ezi01fW8XBiv&part=snippet`)).json();\n    setPlistItems(json);\n  };\n  useEffect(() => {\n    // Playlists(channelId);\n    PlaylistItems();\n  }, []);\n  const titleArray = (_plistItems$items = plistItems.items) === null || _plistItems$items === void 0 ? void 0 : _plistItems$items.map(e => e.snippet.resourceId.videoId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: title[2],\n      opts: {\n        width: \"100%\",\n        height: \"460px\",\n        playerVars: {\n          autoplay: 0,\n          //자동재생 O\n          rel: 0,\n          modestbranding: 1 // 컨트롤 바에 youtube 로고를 표시하지 않음\n        }\n      }\n      //이벤트 리스너\n      ,\n      onEnd: e => {\n        e.target.stopVideo(0);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderMovie, \"0YDT3o9r62Ad4/PcVAU2Wdko+rE=\");\n_c = HeaderMovie;\nexport default HeaderMovie;\nvar _c;\n$RefreshReg$(_c, \"HeaderMovie\");","map":{"version":3,"names":["React","PlayMovie","styled","Player","YouTube","useState","useEffect","YOUTUBEURL","PLAYLISTS","apiKey","PLAYLISTSITEMS","jsxDEV","_jsxDEV","HeaderMovie","_s","_plistItems$items","plistItems","setPlistItems","PlaylistItems","json","fetch","titleArray","items","map","e","snippet","resourceId","videoId","children","title","opts","width","height","playerVars","autoplay","rel","modestbranding","onEnd","target","stopVideo","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header/HeaderMovie.js"],"sourcesContent":["import React from \"react\";\nimport PlayMovie from \"../../movie/PlayMovie\";\nimport styled from \"styled-components\";\nimport Player from \"../../movie/Player\";\nimport YouTube from \"react-youtube\";\n//\nimport { useState, useEffect } from \"react\";\nimport {\n  YOUTUBEURL,\n  PLAYLISTS,\n  apiKey,\n  PLAYLISTSITEMS,\n} from \"../../../API/apis\";\n// UCSB5FOwUVnAhGo_o99IhxYA\n\nconst HeaderMovie = () => {\n  // const channelId = \"UCSB5FOwUVnAhGo_o99IhxYA\";\n  // const Playlists = async () => {\n  //   const [playlists, setPlaylists] = useState([]);\n  //   const json = await (\n  //     await fetch(\n  //       `${YOUTUBEURL}${PLAYLISTS}?key=${apiKey}&channelId=UCSB5FOwUVnAhGo_o99IhxYA&maxResults=50&part=snippet`\n  //     )\n  //   ).json();\n  //   setPlaylists(json);\n  //   console.log(playlists);\n  // };\n  //\n  const [plistItems, setPlistItems] = useState(\"\");\n  const PlaylistItems = async () => {\n    const json = await (\n      await fetch(\n        `${YOUTUBEURL}${PLAYLISTSITEMS}?key=${apiKey}&playlistId=PL9ArOU7415dI9obxf4d-5ezi01fW8XBiv&part=snippet`\n      )\n    ).json();\n    setPlistItems(json);\n  };\n  useEffect(() => {\n    // Playlists(channelId);\n    PlaylistItems();\n  }, []);\n  const titleArray = plistItems.items?.map((e) => e.snippet.resourceId.videoId);\n\n\n  return (\n    <div>\n      <YouTube\n        videoId={title[2]}\n        opts={{\n          width: \"100%\",\n          height: \"460px\",\n          playerVars: {\n            autoplay: 0, //자동재생 O\n            rel: 0,\n            modestbranding: 1, // 컨트롤 바에 youtube 로고를 표시하지 않음\n          },\n        }}\n        //이벤트 리스너\n        onEnd={(e) => {\n          e.target.stopVideo(0);\n        }}\n      />\n      {/* <Player width=\"960px\" height=\"400px\"/> */}\n    </div>\n  );\n};\n\nexport default HeaderMovie;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,OAAO,MAAM,eAAe;AACnC;AACA,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SACEC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,cAAc,QACT,mBAAmB;AAC1B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,iBAAA;EACxB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CACR,GAAEb,UAAW,GAAEG,cAAe,QAAOD,MAAO,6DAA4D,CAC1G,EACDU,IAAI,EAAE;IACRF,aAAa,CAACE,IAAI,CAAC;EACrB,CAAC;EACDb,SAAS,CAAC,MAAM;IACd;IACAY,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMG,UAAU,IAAAN,iBAAA,GAAGC,UAAU,CAACM,KAAK,cAAAP,iBAAA,uBAAhBA,iBAAA,CAAkBQ,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,OAAO,CAACC,UAAU,CAACC,OAAO,CAAC;EAG7E,oBACEf,OAAA;IAAAgB,QAAA,eACEhB,OAAA,CAACR,OAAO;MACNuB,OAAO,EAAEE,KAAK,CAAC,CAAC,CAAE;MAClBC,IAAI,EAAE;QACJC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,OAAO;QACfC,UAAU,EAAE;UACVC,QAAQ,EAAE,CAAC;UAAE;UACbC,GAAG,EAAE,CAAC;UACNC,cAAc,EAAE,CAAC,CAAE;QACrB;MACF;MACA;MAAA;MACAC,KAAK,EAAGb,CAAC,IAAK;QACZA,CAAC,CAACc,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC;MACvB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEE;AAEV,CAAC;AAAC7B,EAAA,CAlDID,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAoDjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}