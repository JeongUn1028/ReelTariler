{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { apiKey, PLAYLISTS, VIDEOS, YOUTUBEURL } from \"../../API/apis\";\nimport YouTube from \"react-youtube\";\nimport ids from \"../../channelId/ids\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Div = styled.div`\n  width: 100%;\n  height: 500px;\n  background: white;\n  border: 1px solid red;\n`;\n_c = Div;\nconst Header = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [playlists, setPlaylists] = useState([]);\n  const getPlaylists = async () => {\n    const plist = await (await fetch(`${YOUTUBEURL}${PLAYLISTS}?key=${apiKey}&channelId=${ids.MavelKorea}&maxResult=50&part=snippet,contentDetails`)).json();\n    setPlaylists(plist);\n    setLoading(false);\n    console.log(plist.items);\n  };\n  useEffect(() => {\n    getPlaylists();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Div, {\n    children: /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: \"qT_fjEgPsaA\",\n      opts: {\n        width: \"100%\",\n        height: \"500px\",\n        playerVars: {\n          autoplay: 1,\n          //자동재생 O\n          modestbranding: 1 // 컨트롤 바에 youtube 로고를 표시하지 않음\n        }\n      }\n      //이벤트 리스너\n      ,\n      onEnd: e => {\n        e.target.stopVideo(0);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"lvLLs+d40Bg8tZEPlbf3qGUN6RE=\");\n_c2 = Header;\nexport default Header;\nvar _c, _c2;\n$RefreshReg$(_c, \"Div\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"names":["React","styled","useState","apiKey","PLAYLISTS","VIDEOS","YOUTUBEURL","YouTube","ids","useEffect","jsxDEV","_jsxDEV","Div","div","_c","Header","_s","loading","setLoading","playlists","setPlaylists","getPlaylists","plist","fetch","MavelKorea","json","console","log","items","children","videoId","opts","width","height","playerVars","autoplay","modestbranding","onEnd","e","target","stopVideo","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { apiKey, PLAYLISTS, VIDEOS, YOUTUBEURL } from \"../../API/apis\";\nimport YouTube from \"react-youtube\";\nimport ids from \"../../channelId/ids\";\nimport { useEffect } from \"react\";\n\nconst Div = styled.div`\n  width: 100%;\n  height: 500px;\n  background: white;\n  border: 1px solid red;\n`;\n\nconst Header = () => {\n  const [loading, setLoading] = useState(true);\n  const [playlists, setPlaylists] = useState([]);\n\n  const getPlaylists = async () => {\n    const plist = await (\n      await fetch(\n        `${YOUTUBEURL}${PLAYLISTS}?key=${apiKey}&channelId=${ids.MavelKorea}&maxResult=50&part=snippet,contentDetails`\n      )\n    ).json();\n    setPlaylists(plist);\n    setLoading(false);\n    console.log(plist.items);\n  };\n\n  useEffect(() => {\n    getPlaylists();\n  }, []);\n\n  return (\n    <Div>\n      <YouTube\n        videoId=\"qT_fjEgPsaA\"\n        opts={{\n          width: \"100%\",\n          height: \"500px\",\n          playerVars: {\n            autoplay: 1, //자동재생 O\n            modestbranding: 1, // 컨트롤 바에 youtube 로고를 표시하지 않음\n          },\n        }}\n        //이벤트 리스너\n        onEnd={(e) => {\n          e.target.stopVideo(0);\n        }}\n      />\n    </Div>\n  );\n};\n\nexport default Header;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,gBAAgB;AACtE,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,GAAG,GAAGX,MAAM,CAACY,GAAI;AACvB;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,GAAG;AAOT,MAAMG,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,KAAK,GAAG,MAAM,CAClB,MAAMC,KAAK,CACR,GAAEjB,UAAW,GAAEF,SAAU,QAAOD,MAAO,cAAaK,GAAG,CAACgB,UAAW,2CAA0C,CAC/G,EACDC,IAAI,EAAE;IACRL,YAAY,CAACE,KAAK,CAAC;IACnBJ,UAAU,CAAC,KAAK,CAAC;IACjBQ,OAAO,CAACC,GAAG,CAACL,KAAK,CAACM,KAAK,CAAC;EAC1B,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdY,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACC,GAAG;IAAAiB,QAAA,eACFlB,OAAA,CAACJ,OAAO;MACNuB,OAAO,EAAC,aAAa;MACrBC,IAAI,EAAE;QACJC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,OAAO;QACfC,UAAU,EAAE;UACVC,QAAQ,EAAE,CAAC;UAAE;UACbC,cAAc,EAAE,CAAC,CAAE;QACrB;MACF;MACA;MAAA;MACAC,KAAK,EAAGC,CAAC,IAAK;QACZA,CAAC,CAACC,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC;MACvB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAC5B,EAAA,CAtCID,MAAM;AAAA8B,GAAA,GAAN9B,MAAM;AAwCZ,eAAeA,MAAM;AAAC,IAAAD,EAAA,EAAA+B,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}