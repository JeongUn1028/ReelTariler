{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/movie/Poster.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport styled from 'styled-components';\nimport { upComings } from '../../API/upComings';\nimport { nowPlayings } from '../../API/nowPlayings';\nimport { movies } from '../../API/getMovieKeys';\nimport MovieModal from './MovieModal';\nimport { otts } from '../../API/otts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-flow: row wrap;\n`;\n_c = Wrapper;\nconst Img = styled.img`\n  width: 200px;\n  height: 260px;\n`;\n_c2 = Img;\nconst Title = styled.p`\n  width: 240px;\n  color: white;\n  word-wrap: normal;\n  text-align: center;\n  padding-right: 50px;\n  margin-top: 10px;\n`;\nconst Div = styled.div`\n  width: 218px;\n  height: 300px;\n  margin: 8px 8px 20px 8px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  text-align: center;\n`;\n_c3 = Div;\nconst Poster = () => {\n  _s();\n  var _netflix$results;\n  //movies\n  const [upcoming, setUpcoming] = useState({});\n  const [nowPlay, setNowPlay] = useState({});\n  const [movieId, setMovieId] = useState({});\n  //otts\n  const [netflix, setNetflix] = useState({});\n  const [wavve, setWavve] = useState({});\n  const [diseny, setDiseny] = useState({});\n  const [modal, setModal] = useState(false);\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [overView, setOverView] = useState('');\n  const [realese, setRealese] = useState('');\n  const [gerne, setGerne] = useState([]);\n  const [voteRate, setVoteRate] = useState(0);\n  const later = dayjs().add(14, 'd').format('YYYY-MM-DD');\n  const today = dayjs().format('YYYY-MM-DD');\n  const ago = dayjs().subtract(14, 'd').format('YYYY-MM-DD');\n  const getUpComings = useCallback(() => {\n    upComings().then(res => {\n      setUpcoming(res);\n    });\n  }, []);\n  const getNowPlayings = useCallback(() => {\n    nowPlayings(1).then(res1 => {\n      setNowPlay(prev => {\n        return {\n          ...prev,\n          res1\n        };\n      });\n    });\n    nowPlayings(2).then(res2 => {\n      setNowPlay(prev => {\n        return {\n          ...prev,\n          res2\n        };\n      });\n    });\n    nowPlayings(3).then(res3 => {\n      setNowPlay(prev => {\n        return {\n          ...prev,\n          res3\n        };\n      });\n    });\n  }, []);\n  const getOtts = useCallback(() => {\n    //netflix\n    otts(8).then(res => {\n      setNetflix(res);\n    });\n    //diseny\n    otts(337).then(res => {\n      setDiseny(res);\n    });\n    //wavve\n    otts(356).then(res => {\n      setWavve(res);\n    });\n  }, []);\n  const close = () => {\n    setModal(false);\n  };\n  useEffect(() => {\n    getUpComings();\n    getNowPlayings();\n    getOtts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [netflix ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this) : (_netflix$results = netflix.results) === null || _netflix$results === void 0 ? void 0 : _netflix$results.map(e => /*#__PURE__*/_jsxDEV(Div, {\n      children: [/*#__PURE__*/_jsxDEV(Img, {\n        src: `https://image.tmdb.org/t/p/w200/${e.poster_path}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uAC1C\\uBD09\\uC77C : \", e.release_date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this), \"\\uC81C\\uBAA9 : \", e.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this)]\n    }, e.videoId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(MovieModal, {\n      open: modal,\n      title: title,\n      image: image,\n      videoId: movieId,\n      close: close,\n      overview: overView,\n      genre: gerne,\n      realese: realese,\n      voteRate: voteRate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Poster, \"YzcdTam1brOK901RQ+fLOa9Fhhc=\");\n_c4 = Poster;\nexport default Poster;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Img\");\n$RefreshReg$(_c3, \"Div\");\n$RefreshReg$(_c4, \"Poster\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","dayjs","styled","upComings","nowPlayings","movies","MovieModal","otts","jsxDEV","_jsxDEV","Wrapper","div","_c","Img","img","_c2","Title","p","Div","_c3","Poster","_s","_netflix$results","upcoming","setUpcoming","nowPlay","setNowPlay","movieId","setMovieId","netflix","setNetflix","wavve","setWavve","diseny","setDiseny","modal","setModal","image","setImage","title","setTitle","overView","setOverView","realese","setRealese","gerne","setGerne","voteRate","setVoteRate","later","add","format","today","ago","subtract","getUpComings","then","res","getNowPlayings","res1","prev","res2","res3","getOtts","close","children","fileName","_jsxFileName","lineNumber","columnNumber","results","map","e","src","poster_path","release_date","videoId","open","overview","genre","_c4","$RefreshReg$"],"sources":["/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/movie/Poster.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport styled from 'styled-components';\nimport { upComings } from '../../API/upComings';\nimport { nowPlayings } from '../../API/nowPlayings';\nimport { movies } from '../../API/getMovieKeys';\nimport MovieModal from './MovieModal';\nimport { otts } from '../../API/otts';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst Img = styled.img`\n  width: 200px;\n  height: 260px;\n`;\n\nconst Title = styled.p`\n  width: 240px;\n  color: white;\n  word-wrap: normal;\n  text-align: center;\n  padding-right: 50px;\n  margin-top: 10px;\n`;\n\nconst Div = styled.div`\n  width: 218px;\n  height: 300px;\n  margin: 8px 8px 20px 8px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  text-align: center;\n`;\n\nconst Poster = () => {\n  //movies\n  const [upcoming, setUpcoming] = useState({});\n  const [nowPlay, setNowPlay] = useState({});\n  const [movieId, setMovieId] = useState({});\n  //otts\n  const [netflix, setNetflix] = useState({});\n  const [wavve, setWavve] = useState({});\n  const [diseny, setDiseny] = useState({});\n\n  const [modal, setModal] = useState(false);\n\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [overView, setOverView] = useState('');\n  const [realese, setRealese] = useState('');\n  const [gerne, setGerne] = useState([]);\n  const [voteRate, setVoteRate] = useState(0);\n  const later = dayjs().add(14, 'd').format('YYYY-MM-DD');\n  const today = dayjs().format('YYYY-MM-DD');\n  const ago = dayjs().subtract(14, 'd').format('YYYY-MM-DD');\n\n  const getUpComings = useCallback(() => {\n    upComings().then((res) => {\n      setUpcoming(res);\n    });\n  }, []);\n\n  const getNowPlayings = useCallback(() => {\n    nowPlayings(1).then((res1) => {\n      setNowPlay((prev) => {\n        return { ...prev, res1 };\n      });\n    });\n\n    nowPlayings(2).then((res2) => {\n      setNowPlay((prev) => {\n        return { ...prev, res2 };\n      });\n    });\n\n    nowPlayings(3).then((res3) => {\n      setNowPlay((prev) => {\n        return { ...prev, res3 };\n      });\n    });\n  }, []);\n\n  const getOtts = useCallback(() => {\n    //netflix\n    otts(8).then((res) => {\n      setNetflix(res);\n    });\n    //diseny\n    otts(337).then((res) => {\n      setDiseny(res);\n    });\n    //wavve\n    otts(356).then((res) => {\n      setWavve(res);\n    });\n  }, []);\n\n  const close = () => {\n    setModal(false);\n  };\n\n  useEffect(() => {\n    getUpComings();\n    getNowPlayings();\n    getOtts();\n  }, []);\n\n  return (\n    <Wrapper>\n      {/* {upcoming &&\n        upcoming.results?.map((e) => {\n          if (e.release_date <= later) {\n            return (\n              <Div\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉예정일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })}\n      {nowPlay &&\n        nowPlay.res1.results?.map((e) => {\n          if (ago <= e.release_date && e.release_date <= today) {\n            return (\n              <Div\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })}\n      {nowPlay &&\n        nowPlay.res2.results?.map((e) => {\n          if (ago <= e.release_date && e.release_date <= today) {\n            return (\n              <Div\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })}\n      {nowPlay &&\n        nowPlay.res3.results?.map((e) => {\n          if (ago <= e.release_date && e.release_date <= today) {\n            return (\n              <Div\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })} */}\n      {netflix ? (\n        <h1>Loading...</h1>\n      ) : (\n        netflix.results?.map((e) => (\n          <Div key={e.videoId}>\n            <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n            <div>\n              개봉일 : {e.release_date}\n              <br></br>제목 : {e.title}\n            </div>\n          </Div>\n        ))\n      )}\n      <MovieModal\n        open={modal}\n        title={title}\n        image={image}\n        videoId={movieId}\n        close={close}\n        overview={overView}\n        genre={gerne}\n        realese={realese}\n        voteRate={voteRate}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Poster;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}