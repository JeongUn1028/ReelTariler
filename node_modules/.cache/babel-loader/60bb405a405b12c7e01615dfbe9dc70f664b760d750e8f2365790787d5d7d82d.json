{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/movie/Poster.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport styled from 'styled-components';\nimport { upComings } from '../../API/upComings';\nimport { nowPlayings } from '../../API/nowPlayings';\nimport { movies } from '../../API/getMovieKeys';\nimport MovieModal from './MovieModal';\nimport { otts } from '../../API/otts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-flow: row wrap;\n`;\n_c = Wrapper;\nconst Img = styled.img`\n  width: 200px;\n  height: 260px;\n`;\nconst Title = styled.p`\n  width: 240px;\n  color: white;\n  word-wrap: normal;\n  text-align: center;\n  padding-right: 50px;\n  margin-top: 10px;\n`;\nconst Div = styled.div`\n  width: 218px;\n  height: 300px;\n  margin: 8px 8px 20px 8px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  text-align: center;\n`;\nconst Poster = () => {\n  _s();\n  const [upcoming, setUpcoming] = useState({});\n  const [nowPlay, setNowPlay] = useState({});\n  const [movieId, setMovieId] = useState({});\n  const [modal, setModal] = useState(false);\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [overView, setOverView] = useState('');\n  const [realese, setRealese] = useState('');\n  const [gerne, setGerne] = useState([]);\n  const [voteRate, setVoteRate] = useState(0);\n  const later = dayjs().add(14, 'd').format('YYYY-MM-DD');\n  const today = dayjs().format('YYYY-MM-DD');\n  const ago = dayjs().subtract(14, 'd').format('YYYY-MM-DD');\n  const getUpComings = useCallback(() => {\n    upComings().then(res => {\n      setUpcoming(res);\n    });\n  }, []);\n  const getNowPlayings = useCallback(() => {\n    nowPlayings(1).then(res1 => {\n      setNowPlay(prev => {\n        return {\n          ...prev,\n          res1\n        };\n      });\n    });\n    nowPlayings(2).then(res2 => {\n      setNowPlay(prev => {\n        return {\n          ...prev,\n          res2\n        };\n      });\n    });\n    nowPlayings(3).then(res3 => {\n      setNowPlay(prev => {\n        return {\n          ...prev,\n          res3\n        };\n      });\n    });\n  }, []);\n  const getOtts = useCallback(() => {\n    //netflix\n    otts().then(res);\n  });\n  const close = () => {\n    setModal(false);\n  };\n  useEffect(() => {\n    getUpComings();\n    getNowPlayings();\n    getOtts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(MovieModal, {\n      open: modal,\n      title: title,\n      image: image,\n      videoId: movieId,\n      close: close,\n      overview: overView,\n      genre: gerne,\n      realese: realese,\n      voteRate: voteRate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Poster, \"MTU32oBI/GPTlpnTgPRb52aQOmk=\");\n_c2 = Poster;\nexport default Poster;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Poster\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","dayjs","styled","upComings","nowPlayings","movies","MovieModal","otts","jsxDEV","_jsxDEV","Wrapper","div","_c","Img","img","Title","p","Div","Poster","_s","upcoming","setUpcoming","nowPlay","setNowPlay","movieId","setMovieId","modal","setModal","image","setImage","title","setTitle","overView","setOverView","realese","setRealese","gerne","setGerne","voteRate","setVoteRate","later","add","format","today","ago","subtract","getUpComings","then","res","getNowPlayings","res1","prev","res2","res3","getOtts","close","children","open","videoId","overview","genre","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/movie/Poster.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport styled from 'styled-components';\nimport { upComings } from '../../API/upComings';\nimport { nowPlayings } from '../../API/nowPlayings';\nimport { movies } from '../../API/getMovieKeys';\nimport MovieModal from './MovieModal';\nimport { otts } from '../../API/otts';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst Img = styled.img`\n  width: 200px;\n  height: 260px;\n`;\n\nconst Title = styled.p`\n  width: 240px;\n  color: white;\n  word-wrap: normal;\n  text-align: center;\n  padding-right: 50px;\n  margin-top: 10px;\n`;\n\nconst Div = styled.div`\n  width: 218px;\n  height: 300px;\n  margin: 8px 8px 20px 8px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  text-align: center;\n`;\n\nconst Poster = () => {\n  const [upcoming, setUpcoming] = useState({});\n  const [nowPlay, setNowPlay] = useState({});\n  const [movieId, setMovieId] = useState({});\n  const [modal, setModal] = useState(false);\n\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [overView, setOverView] = useState('');\n  const [realese, setRealese] = useState('');\n  const [gerne, setGerne] = useState([]);\n  const [voteRate, setVoteRate] = useState(0);\n  const later = dayjs().add(14, 'd').format('YYYY-MM-DD');\n  const today = dayjs().format('YYYY-MM-DD');\n  const ago = dayjs().subtract(14, 'd').format('YYYY-MM-DD');\n\n  const getUpComings = useCallback(() => {\n    upComings().then((res) => {\n      setUpcoming(res);\n    });\n  }, []);\n\n  const getNowPlayings = useCallback(() => {\n    nowPlayings(1).then((res1) => {\n      setNowPlay((prev) => {\n        return { ...prev, res1 };\n      });\n    });\n\n    nowPlayings(2).then((res2) => {\n      setNowPlay((prev) => {\n        return { ...prev, res2 };\n      });\n    });\n\n    nowPlayings(3).then((res3) => {\n      setNowPlay((prev) => {\n        return { ...prev, res3 };\n      });\n    });\n  }, []);\n\n  const getOtts = useCallback(() => {\n    //netflix\n  otts().then((res))\n  })\n\n  const close = () => {\n    setModal(false);\n  };\n\n  useEffect(() => {\n    getUpComings();\n    getNowPlayings();\n    getOtts();\n  }, []);\n\n  return (\n    <Wrapper>\n      {/* {upcoming &&\n        upcoming.results?.map((e) => {\n          if (e.release_date <= later) {\n            return (\n              <Div\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉예정일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })}\n      {nowPlay &&\n        nowPlay.res1.results?.map((e) => {\n          if (ago <= e.release_date && e.release_date <= today) {\n            return (\n              <Div\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })}\n      {nowPlay &&\n        nowPlay.res2.results?.map((e) => {\n          if (ago <= e.release_date && e.release_date <= today) {\n            return (\n              <Div\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })}\n      {nowPlay &&\n        nowPlay.res3.results?.map((e) => {\n          if (ago <= e.release_date && e.release_date <= today) {\n            return (\n              <Div\n                onClick={() => {\n                  setMovieId(e.id);\n                  setImage(e.poster_path);\n                  setTitle(e.title);\n                  setOverView(e.overview);\n                  setGerne(e.genre_ids);\n                  setRealese(e.release_date);\n                  setVoteRate(e.vote_average);\n                  setModal(true);\n                }}\n              >\n                <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n                <Title>\n                  개봉일 : {e.release_date}\n                  <br></br>제목 : {e.title}\n                </Title>\n              </Div>\n            );\n          }\n        })} */}\n      <MovieModal\n        open={modal}\n        title={title}\n        image={image}\n        videoId={movieId}\n        close={close}\n        overview={overView}\n        genre={gerne}\n        realese={realese}\n        voteRate={voteRate}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Poster;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}