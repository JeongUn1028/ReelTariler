{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { apiKey, PLAYLISTS, PLAYLISTSITEMS, VIDEOS, YOUTUBEURL } from \"../../API/apis\";\nimport YouTube from \"react-youtube\";\nimport ids from \"../../channelId/ids\";\nimport { useEffect } from \"react\";\nimport { playlistItems } from \"../../API/PlaylistItems\";\nimport { Playlists, playlists } from \"../../API/Playlist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Div = styled.div`\n  width: 100%;\n  height: 500px;\n`;\n_c = Div;\nconst Header = () => {\n  //   const [loading, setLoading] = useState(true);\n  //   const [playlists, setPlaylists] = useState([]);\n  //   console.log(\"HEAD\");\n  //   const getPlaylists = async () => {\n  //     const plist = await (\n  //       await fetch(\n  //         `${YOUTUBEURL}${PLAYLISTSITEMS}&part=id,snippet`\n  //       )\n  //     ).json();\n  //     setPlaylists(plist);\n  //     setLoading(false);\n  //   };\n  // //필요한것 -> video 의 id\n  //   const getVideos = async () => {\n  //     const vlist = await (\n  //         await fetch(\n  //             `${YOUTUBEURL}${VIDEOS}?key=${apiKey}&`\n  //         )\n  //     )\n  //   }\n\n  //   useEffect(() => {\n  //     getPlaylists();\n  //   }, []);\n  return /*#__PURE__*/_jsxDEV(Div, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Header;\nexport default Header;\nvar _c, _c2;\n$RefreshReg$(_c, \"Div\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"names":["React","styled","useState","apiKey","PLAYLISTS","PLAYLISTSITEMS","VIDEOS","YOUTUBEURL","YouTube","ids","useEffect","playlistItems","Playlists","playlists","jsxDEV","_jsxDEV","Div","div","_c","Header","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { apiKey, PLAYLISTS, PLAYLISTSITEMS, VIDEOS, YOUTUBEURL } from \"../../API/apis\";\nimport YouTube from \"react-youtube\";\nimport ids from \"../../channelId/ids\";\nimport { useEffect } from \"react\";\nimport { playlistItems } from \"../../API/PlaylistItems\";\nimport { Playlists, playlists } from \"../../API/Playlist\";\n\nconst Div = styled.div`\n  width: 100%;\n  height: 500px;\n`;\n\nconst Header = () => {\n//   const [loading, setLoading] = useState(true);\n//   const [playlists, setPlaylists] = useState([]);\n//   console.log(\"HEAD\");\n//   const getPlaylists = async () => {\n//     const plist = await (\n//       await fetch(\n//         `${YOUTUBEURL}${PLAYLISTSITEMS}&part=id,snippet`\n//       )\n//     ).json();\n//     setPlaylists(plist);\n//     setLoading(false);\n//   };\n// //필요한것 -> video 의 id\n//   const getVideos = async () => {\n//     const vlist = await (\n//         await fetch(\n//             `${YOUTUBEURL}${VIDEOS}?key=${apiKey}&`\n//         )\n//     )\n//   }\n\n//   useEffect(() => {\n//     getPlaylists();\n//   }, []);\n  return (\n    <Div>\n      \n    </Div>\n  );\n};\n\nexport default Header;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,SAAS,EAAEC,cAAc,EAAEC,MAAM,EAAEC,UAAU,QAAQ,gBAAgB;AACtF,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,SAAS,EAAEC,SAAS,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,GAAG,GAAGf,MAAM,CAACgB,GAAI;AACvB;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,GAAG;AAKT,MAAMG,MAAM,GAAGA,CAAA,KAAM;EACrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACE,oBACEJ,OAAA,CAACC,GAAG;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEE;AAEV,CAAC;AAACC,GAAA,GA9BIL,MAAM;AAgCZ,eAAeA,MAAM;AAAC,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}