{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/pages/UpComings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { upComings } from '../API/upComings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-flow: row wrap;\n`;\n_c = Wrapper;\nconst Img = styled.img`\n  width: 200px;\n  height: 260px;\n`;\n_c2 = Img;\nconst Title = styled.p`\n  width: 240px;\n  color: white;\n  word-wrap: normal;\n  text-align: center;\n  padding-right: 50px;\n  margin-top: 10px;\n`;\n_c3 = Title;\nconst Div = styled.div`\n  width: 218px;\n  height: 300px;\n  margin: 8px 8px 20px 8px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  text-align: center;\n`;\n_c4 = Div;\nconst UpComings = () => {\n  _s();\n  var _upcoming$results;\n  const [UpComing, setUpcoming] = useState({});\n  const getUpComings = useCallback(() => {\n    upComings().then(res => {\n      setUpcoming(res);\n    });\n  }, []);\n  useEffect(() => {\n    getUpComings();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: upcoming === false ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this) : (_upcoming$results = upcoming.results) === null || _upcoming$results === void 0 ? void 0 : _upcoming$results.map(e => {\n      if (e.release_date <= later) {\n        return /*#__PURE__*/_jsxDEV(Div, {\n          onClick: () => {\n            setMovieId(e.id);\n            setImage(e.poster_path);\n            setTitle(e.title);\n            setOverView(e.overview);\n            setGerne(e.genre_ids);\n            setRealese(e.release_date);\n            setVoteRate(e.vote_average);\n            setModal(true);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Img, {\n            src: `https://image.tmdb.org/t/p/w200/${e.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Title, {\n            children: [\"\\uAC1C\\uBD09\\uC608\\uC815\\uC77C : \", e.release_date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), \"\\uC81C\\uBAA9 : \", e.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n_s(UpComings, \"4jNUo0F9IkkcrlyAdv28FvUq0fs=\");\n_c5 = UpComings;\nexport default UpComings;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Img\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Div\");\n$RefreshReg$(_c5, \"UpComings\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","upComings","jsxDEV","_jsxDEV","Wrapper","div","_c","Img","img","_c2","Title","p","_c3","Div","_c4","UpComings","_s","_upcoming$results","UpComing","setUpcoming","getUpComings","then","res","children","upcoming","fileName","_jsxFileName","lineNumber","columnNumber","results","map","e","release_date","later","onClick","setMovieId","id","setImage","poster_path","setTitle","title","setOverView","overview","setGerne","genre_ids","setRealese","setVoteRate","vote_average","setModal","src","_c5","$RefreshReg$"],"sources":["/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/pages/UpComings.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { upComings } from '../API/upComings';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst Img = styled.img`\n  width: 200px;\n  height: 260px;\n`;\n\nconst Title = styled.p`\n  width: 240px;\n  color: white;\n  word-wrap: normal;\n  text-align: center;\n  padding-right: 50px;\n  margin-top: 10px;\n`;\n\nconst Div = styled.div`\n  width: 218px;\n  height: 300px;\n  margin: 8px 8px 20px 8px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  text-align: center;\n`;\n\nconst UpComings = () => {\n  const [UpComing, setUpcoming] = useState({});\n\n  const getUpComings = useCallback(() => {\n    upComings().then((res) => {\n      setUpcoming(res);\n    });\n  }, []);\n\n  useEffect(() => {\n    getUpComings();\n  }, []);\n  return <Wrapper>{upcoming === false ? (\n    <h2>Loading...</h2>\n  ) : (\n    upcoming.results?.map((e) => {\n      if (e.release_date <= later) {\n        return (\n          <Div\n            onClick={() => {\n              setMovieId(e.id);\n              setImage(e.poster_path);\n              setTitle(e.title);\n              setOverView(e.overview);\n              setGerne(e.genre_ids);\n              setRealese(e.release_date);\n              setVoteRate(e.vote_average);\n              setModal(true);\n            }}\n          >\n            <Img src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}></Img>\n            <Title>\n              개봉예정일 : {e.release_date}\n              <br></br>제목 : {e.title}\n            </Title>\n          </Div>\n        );\n      }\n    })\n  )}</Wrapper>;\n};\n\nexport default UpComings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}