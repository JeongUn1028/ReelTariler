{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header/Header.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { apiKey, PLAYLISTS, PLAYLISTSITEMS, VIDEOS, YOUTUBEURL } from \"../../../API/apis\";\nimport YouTube from \"react-youtube\";\nimport ids from \"../../../channelId/ids\";\nimport { useEffect } from \"react\";\nimport { playlistItems } from \"../../../API/PlaylistItems\";\nimport { Playlists, playlists } from \"../../../API/Playlist\";\nimport HeaderMovie from \"./HeaderMovie\";\nimport HeaderNav from \"./HeaderNav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Div = styled.div`\n  width: 100%;\n  height: 500px;\n`;\n_c = Div;\nconst Header = () => {\n  //   const [loading, setLoading] = useState(true);\n  //   const [playlists, setPlaylists] = useState([]);\n  //   console.log(\"HEAD\");\n  //   const getPlaylists = async () => {\n  //     const plist = await (\n  //       await fetch(\n  //         `${YOUTUBEURL}${PLAYLISTSITEMS}&part=id,snippet`\n  //       )\n  //     ).json();\n  //     setPlaylists(plist);\n  //     setLoading(false);\n  //   };\n  // //필요한것 -> video 의 id\n  //   const getVideos = async () => {\n  //     const vlist = await (\n  //         await fetch(\n  //             `${YOUTUBEURL}${VIDEOS}?key=${apiKey}&`\n  //         )\n  //     )\n  //   }\n\n  //   useEffect(() => {\n  //     getPlaylists();\n  //   }, []);\n  return /*#__PURE__*/_jsxDEV(Div, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeaderMovie, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Header;\nexport default Header;\nvar _c, _c2;\n$RefreshReg$(_c, \"Div\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"names":["React","styled","useState","apiKey","PLAYLISTS","PLAYLISTSITEMS","VIDEOS","YOUTUBEURL","YouTube","ids","useEffect","playlistItems","Playlists","playlists","HeaderMovie","HeaderNav","jsxDEV","_jsxDEV","Div","div","_c","Header","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header/Header.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport {\n  apiKey,\n  PLAYLISTS,\n  PLAYLISTSITEMS,\n  VIDEOS,\n  YOUTUBEURL,\n} from \"../../../API/apis\";\nimport YouTube from \"react-youtube\";\nimport ids from \"../../../channelId/ids\";\nimport { useEffect } from \"react\";\nimport { playlistItems } from \"../../../API/PlaylistItems\";\nimport { Playlists, playlists } from \"../../../API/Playlist\";\nimport HeaderMovie from \"./HeaderMovie\";\nimport HeaderNav from \"./HeaderNav\";\n\nconst Div = styled.div`\n  width: 100%;\n  height: 500px;\n`;\n\nconst Header = () => {\n  //   const [loading, setLoading] = useState(true);\n  //   const [playlists, setPlaylists] = useState([]);\n  //   console.log(\"HEAD\");\n  //   const getPlaylists = async () => {\n  //     const plist = await (\n  //       await fetch(\n  //         `${YOUTUBEURL}${PLAYLISTSITEMS}&part=id,snippet`\n  //       )\n  //     ).json();\n  //     setPlaylists(plist);\n  //     setLoading(false);\n  //   };\n  // //필요한것 -> video 의 id\n  //   const getVideos = async () => {\n  //     const vlist = await (\n  //         await fetch(\n  //             `${YOUTUBEURL}${VIDEOS}?key=${apiKey}&`\n  //         )\n  //     )\n  //   }\n\n  //   useEffect(() => {\n  //     getPlaylists();\n  //   }, []);\n  return (\n    <Div>\n      <HeaderNav />\n      <HeaderMovie />\n    </Div>\n  );\n};\n\nexport default Header;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SACEC,MAAM,EACNC,SAAS,EACTC,cAAc,EACdC,MAAM,EACNC,UAAU,QACL,mBAAmB;AAC1B,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,GAAG,MAAM,wBAAwB;AACxC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,SAAS,EAAEC,SAAS,QAAQ,uBAAuB;AAC5D,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,GAAG,GAAGjB,MAAM,CAACkB,GAAI;AACvB;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,GAAG;AAKT,MAAMG,MAAM,GAAGA,CAAA,KAAM;EACnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA,oBACEJ,OAAA,CAACC,GAAG;IAAAI,QAAA,gBACFL,OAAA,CAACF,SAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACbT,OAAA,CAACH,WAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACX;AAEV,CAAC;AAACC,GAAA,GA/BIN,MAAM;AAiCZ,eAAeA,MAAM;AAAC,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}