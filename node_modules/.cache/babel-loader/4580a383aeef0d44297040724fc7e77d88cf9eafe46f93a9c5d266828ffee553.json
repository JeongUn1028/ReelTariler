{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/movie/Thumbnail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ids from \"../../channelId/ids\";\nimport { apiKey, YOUTUBEURL, PLAYLISTS } from \"../../API/apis\";\nimport ClickMovie from \"../part/ClickMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Div = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  display: flex;\n  flex-flow: wrap;\n  flex-direction: row;\n  justify-content: space-evenly;\n  text-align: left;\n`;\n_c = Div;\nconst Img = styled.img`\n  width: 240px;\n  height: 160px;\n  padding-right: 45px;\n`;\n_c2 = Img;\nconst Title = styled.p`\n  color:white;\n`;\n_c3 = Title;\nconst Thumbnail = () => {\n  _s();\n  var _playlist$items;\n  const [loading, setLoading] = useState(true);\n  const [playlist, setPlaylist] = useState([]);\n  const [modal, setModal] = useState(false);\n  const outside = useRef();\n  const getPlaylist = async () => {\n    const json = await (await fetch(`${YOUTUBEURL}${PLAYLISTS}?key=${apiKey}&channelId=${ids.MarvelKorea}&maxResults=50&part=snippet,contentDetails`)).json();\n    setPlaylist(json);\n    setLoading(false);\n    // console.log(json);\n  };\n\n  useEffect(() => {\n    getPlaylist();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Div, {\n    onClick: () => setModal(true),\n    children: [modal === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: outside,\n      onClick: e => {\n        if (e.target == outside.current) setModal(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(ClickMovie, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 108\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this) : null, (_playlist$items = playlist.items) === null || _playlist$items === void 0 ? void 0 : _playlist$items.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Img, {\n        src: e.snippet.thumbnails.medium.url,\n        alt: \"thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: e.snippet.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, e.etag, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Thumbnail, \"IPEDtW//OASboR87DrzkxEpZb2o=\");\n_c4 = Thumbnail;\nexport default Thumbnail;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Div\");\n$RefreshReg$(_c2, \"Img\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Thumbnail\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","ids","apiKey","YOUTUBEURL","PLAYLISTS","ClickMovie","jsxDEV","_jsxDEV","Div","div","_c","Img","img","_c2","Title","p","_c3","Thumbnail","_s","_playlist$items","loading","setLoading","playlist","setPlaylist","modal","setModal","outside","getPlaylist","json","fetch","MarvelKorea","onClick","children","ref","e","target","current","fileName","_jsxFileName","lineNumber","columnNumber","items","map","src","snippet","thumbnails","medium","url","alt","title","etag","_c4","$RefreshReg$"],"sources":["/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/movie/Thumbnail.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ids from \"../../channelId/ids\";\nimport { apiKey, YOUTUBEURL, PLAYLISTS } from \"../../API/apis\";\nimport ClickMovie from \"../part/ClickMovie\";\n\nconst Div = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  display: flex;\n  flex-flow: wrap;\n  flex-direction: row;\n  justify-content: space-evenly;\n  text-align: left;\n`;\n\n\nconst Img = styled.img`\n  width: 240px;\n  height: 160px;\n  padding-right: 45px;\n`;\n\nconst Title = styled.p`\n  color:white;\n`\nconst Thumbnail = () => {\n  const [loading, setLoading] = useState(true);\n  const [playlist, setPlaylist] = useState([]);\n  const [modal, setModal] = useState(false);\n  const outside = useRef();\n\n  const getPlaylist = async () => {\n    const json = await (\n      await fetch(\n        `${YOUTUBEURL}${PLAYLISTS}?key=${apiKey}&channelId=${ids.MarvelKorea}&maxResults=50&part=snippet,contentDetails`\n      )\n    ).json();\n    setPlaylist(json);\n    setLoading(false);\n    // console.log(json);\n  };\n\n  useEffect(() => {\n    getPlaylist();\n  }, []);\n \n\n  return (\n    <Div onClick={() => setModal(true)}>\n    {modal === true ? <div ref={outside} onClick={ e => {if(e.target == outside.current) setModal(false)}}><ClickMovie  /></div> : null}\n      {playlist.items?.map((e) => (\n        <div key={e.etag}>\n            <Img\n              src={e.snippet.thumbnails.medium.url}\n              alt=\"thumbnail\"\n            ></Img>\n            <Title>{e.snippet.title}</Title>\n        </div>\n      ))}\n    </Div>\n  );\n};\nexport default Thumbnail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}