{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header/HeaderMovie.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport YouTube from \"react-youtube\";\nimport ids from \"../../../channelId/ids\";\nimport { useState, useEffect } from \"react\";\nimport { YOUTUBEURL, PLAYLISTS, apiKey, PLAYLISTSITEMS } from \"../../../API/apis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderMovie = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const getMovies = async () => {\n    const json = await await fetch();\n  };\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: videoId,\n      opts: {\n        width: \"100%\",\n        height: \"460px\",\n        playerVars: {\n          autoplay: 0,\n          //자동재생 O\n          rel: 0,\n          modestbranding: 1 // 컨트롤 바에 youtube 로고를 표시하지 않음\n        }\n      },\n\n      onEnd: e => {\n        e.target.stopVideo(0);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderMovie, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = HeaderMovie;\nexport default HeaderMovie;\nvar _c;\n$RefreshReg$(_c, \"HeaderMovie\");","map":{"version":3,"names":["React","YouTube","ids","useState","useEffect","YOUTUBEURL","PLAYLISTS","apiKey","PLAYLISTSITEMS","jsxDEV","_jsxDEV","HeaderMovie","_s","movies","setMovies","getMovies","json","fetch","children","videoId","opts","width","height","playerVars","autoplay","rel","modestbranding","onEnd","e","target","stopVideo","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header/HeaderMovie.js"],"sourcesContent":["import React from \"react\";\nimport YouTube from \"react-youtube\";\nimport ids from \"../../../channelId/ids\";\nimport { useState, useEffect } from \"react\";\nimport {\n  YOUTUBEURL,\n  PLAYLISTS,\n  apiKey,\n  PLAYLISTSITEMS,\n} from \"../../../API/apis\";\n\nconst HeaderMovie = () => {\n  const [movies, setMovies]=useState([]);\n\n  const getMovies = async () => {\n    const json = await (\n      await fetch(\n        \n      )\n    )\n  }\n\n  useEffect(() => {\n  }, []);\n\n  return (\n    <div>\n      <YouTube\n        videoId={videoId}\n        opts={{\n          width: \"100%\",\n          height: \"460px\",\n          playerVars: {\n            autoplay: 0, //자동재생 O\n            rel: 0,\n            modestbranding: 1, // 컨트롤 바에 youtube 로고를 표시하지 않음\n          },\n        }}\n        onEnd={(e) => {\n          e.target.stopVideo(0);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default HeaderMovie;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,GAAG,MAAM,wBAAwB;AACxC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SACEC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,cAAc,QACT,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,IAAI,GAAG,MACX,MAAMC,KAAK,EAGZ;EACH,CAAC;EAEDb,SAAS,CAAC,MAAM,CAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEM,OAAA;IAAAQ,QAAA,eACER,OAAA,CAACT,OAAO;MACNkB,OAAO,EAAEA,OAAQ;MACjBC,IAAI,EAAE;QACJC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,OAAO;QACfC,UAAU,EAAE;UACVC,QAAQ,EAAE,CAAC;UAAE;UACbC,GAAG,EAAE,CAAC;UACNC,cAAc,EAAE,CAAC,CAAE;QACrB;MACF,CAAE;;MACFC,KAAK,EAAGC,CAAC,IAAK;QACZA,CAAC,CAACC,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC;MACvB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACtB,EAAA,CAjCID,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}