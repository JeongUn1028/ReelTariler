{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/movie/Poster.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Poster = () => {\n  _s();\n  var _upcoming$results, _nowPlay$results;\n  const apiKey = \"b69ce63df91b692b402e8436d1099819\";\n  const TMDBURL = \"https://api.themoviedb.org/3/movie\";\n  const [upcoming, setUpcoming] = useState({});\n  const [nowPlay, setNowPlay] = useState({});\n  const [latest, setLatest] = useState({});\n  const later = dayjs().add(7, \"d\").format(\"YYYY-MM-DD\");\n  const today = dayjs().format(\"YYYY-MM-DD\");\n  const ago = dayjs().subtract(7, \"d\").format(\"YYYY-MM-DD\");\n  const number = [1, 2];\n  const getUpcoming = async page => {\n    const json = await (await fetch(`\n      ${TMDBURL}/upcoming?api_key=${apiKey}&language=ko&page=${page}&region=KR\n      `)).json();\n    setUpcoming(prevState => {\n      return {\n        ...prevState,\n        json\n      };\n    });\n  };\n  const getNowPlaying = async () => {\n    const json = await (await fetch(`${TMDBURL}/now_playing?api_key=b69ce63df91b692b402e8436d1099819&language=ko&page=1&region=KR`)).json();\n    setNowPlay(json);\n  };\n  //980078\n  const getMovieId = async () => {\n    const json = await (await fetch(`${TMDBURL}/980078/videos?api_key=b69ce63df91b692b402e8436d1099819&language=en`)).json();\n    setLatest(json);\n  };\n  useEffect(() => {\n    getUpcoming(2);\n    getNowPlaying();\n    getMovieId();\n  }, []);\n  console.log(upcoming);\n  console.log(latest);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC0C1\\uC601\\uC608\\uC815\\uC791\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: (_upcoming$results = upcoming.results) === null || _upcoming$results === void 0 ? void 0 : _upcoming$results.map(e => {\n        if (e.release_date <= later) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: e.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://image.tmdb.org/t/p/w200/${e.poster_path}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: white\n              },\n              children: e.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: e.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD604\\uC7AC \\uC0C1\\uC601\\uC911\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: (_nowPlay$results = nowPlay.results) === null || _nowPlay$results === void 0 ? void 0 : _nowPlay$results.map(e => {\n        if (e.release_date <= later) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: e.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://image.tmdb.org/t/p/w200/${e.poster_path}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: e.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Poster, \"XJjNTIXuwK+/pnYsJoQjRpO3/ic=\");\n_c = Poster;\nexport default Poster;\nvar _c;\n$RefreshReg$(_c, \"Poster\");","map":{"version":3,"names":["React","useEffect","useState","dayjs","jsxDEV","_jsxDEV","Fragment","_Fragment","Poster","_s","_upcoming$results","_nowPlay$results","apiKey","TMDBURL","upcoming","setUpcoming","nowPlay","setNowPlay","latest","setLatest","later","add","format","today","ago","subtract","number","getUpcoming","page","json","fetch","prevState","getNowPlaying","getMovieId","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","results","map","e","release_date","title","src","poster_path","style","color","white","overview","id","_c","$RefreshReg$"],"sources":["/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/movie/Poster.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\n\nconst Poster = () => {\n  const apiKey = \"b69ce63df91b692b402e8436d1099819\";\n  const TMDBURL = \"https://api.themoviedb.org/3/movie\";\n  const [upcoming, setUpcoming] = useState({});\n  const [nowPlay, setNowPlay] = useState({});\n  const [latest, setLatest] = useState({});\n  const later = dayjs().add(7, \"d\").format(\"YYYY-MM-DD\");\n  const today = dayjs().format(\"YYYY-MM-DD\");\n  const ago = dayjs().subtract(7, \"d\").format(\"YYYY-MM-DD\");\n\n  const number = [1, 2];\n\n  const getUpcoming = async (page) => {\n    const json = await (\n      await fetch(`\n      ${TMDBURL}/upcoming?api_key=${apiKey}&language=ko&page=${page}&region=KR\n      `)\n    ).json();\n    setUpcoming((prevState) => {\n      return { ...prevState, json };\n    });\n  };\n\n  const getNowPlaying = async () => {\n    const json = await (\n      await fetch(\n        `${TMDBURL}/now_playing?api_key=b69ce63df91b692b402e8436d1099819&language=ko&page=1&region=KR`\n      )\n    ).json();\n    setNowPlay(json);\n  };\n  //980078\n  const getMovieId = async () => {\n    const json = await (\n      await fetch(\n        `${TMDBURL}/980078/videos?api_key=b69ce63df91b692b402e8436d1099819&language=en`\n      )\n    ).json();\n    setLatest(json);\n  };\n\n  useEffect(() => {\n    getUpcoming(2);\n    getNowPlaying();\n    getMovieId();\n  }, []);\n  console.log(upcoming);\n  console.log(latest);\n  return (\n    <>\n      <h1>상영예정작</h1>\n      <div>\n        {upcoming.results?.map((e) => {\n          if (e.release_date <= later) {\n            return (\n              <div>\n                <div>{e.title}</div>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}\n                ></img>\n                <div style={{\n                  color: white,\n                }}>{e.overview}</div>\n                <div>{e.id}</div>\n              </div>\n            );\n          }\n        })}\n      </div>\n      <h1>현재 상영중</h1>\n      <div>\n        {nowPlay.results?.map((e) => {\n          if (e.release_date <= later) {\n            return (\n              <div>\n                <div>{e.title}</div>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${e.poster_path}`}\n                ></img>\n                <div>{e.overview}</div>\n              </div>\n            );\n          }\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default Poster;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,gBAAA;EACnB,MAAMC,MAAM,GAAG,kCAAkC;EACjD,MAAMC,OAAO,GAAG,oCAAoC;EACpD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMkB,KAAK,GAAGjB,KAAK,EAAE,CAACkB,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAACC,MAAM,CAAC,YAAY,CAAC;EACtD,MAAMC,KAAK,GAAGpB,KAAK,EAAE,CAACmB,MAAM,CAAC,YAAY,CAAC;EAC1C,MAAME,GAAG,GAAGrB,KAAK,EAAE,CAACsB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAACH,MAAM,CAAC,YAAY,CAAC;EAEzD,MAAMI,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAErB,MAAMC,WAAW,GAAG,MAAOC,IAAI,IAAK;IAClC,MAAMC,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CAAE;AACnB,QAAQjB,OAAQ,qBAAoBD,MAAO,qBAAoBgB,IAAK;AACpE,OAAO,CAAC,EACFC,IAAI,EAAE;IACRd,WAAW,CAAEgB,SAAS,IAAK;MACzB,OAAO;QAAE,GAAGA,SAAS;QAAEF;MAAK,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMH,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CACR,GAAEjB,OAAQ,oFAAmF,CAC/F,EACDgB,IAAI,EAAE;IACRZ,UAAU,CAACY,IAAI,CAAC;EAClB,CAAC;EACD;EACA,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMJ,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CACR,GAAEjB,OAAQ,qEAAoE,CAChF,EACDgB,IAAI,EAAE;IACRV,SAAS,CAACU,IAAI,CAAC;EACjB,CAAC;EAED5B,SAAS,CAAC,MAAM;IACd0B,WAAW,CAAC,CAAC,CAAC;IACdK,aAAa,EAAE;IACfC,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EACNC,OAAO,CAACC,GAAG,CAACrB,QAAQ,CAAC;EACrBoB,OAAO,CAACC,GAAG,CAACjB,MAAM,CAAC;EACnB,oBACEb,OAAA,CAAAE,SAAA;IAAA6B,QAAA,gBACE/B,OAAA;MAAA+B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACdnC,OAAA;MAAA+B,QAAA,GAAA1B,iBAAA,GACGI,QAAQ,CAAC2B,OAAO,cAAA/B,iBAAA,uBAAhBA,iBAAA,CAAkBgC,GAAG,CAAEC,CAAC,IAAK;QAC5B,IAAIA,CAAC,CAACC,YAAY,IAAIxB,KAAK,EAAE;UAC3B,oBACEf,OAAA;YAAA+B,QAAA,gBACE/B,OAAA;cAAA+B,QAAA,EAAMO,CAAC,CAACE;YAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO,eACpBnC,OAAA;cACEyC,GAAG,EAAG,mCAAkCH,CAAC,CAACI,WAAY;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACnD,eACPnC,OAAA;cAAK2C,KAAK,EAAE;gBACVC,KAAK,EAAEC;cACT,CAAE;cAAAd,QAAA,EAAEO,CAAC,CAACQ;YAAQ;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO,eACrBnC,OAAA;cAAA+B,QAAA,EAAMO,CAAC,CAACS;YAAE;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACb;QAEV;MACF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACNnC,OAAA;MAAA+B,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACfnC,OAAA;MAAA+B,QAAA,GAAAzB,gBAAA,GACGK,OAAO,CAACyB,OAAO,cAAA9B,gBAAA,uBAAfA,gBAAA,CAAiB+B,GAAG,CAAEC,CAAC,IAAK;QAC3B,IAAIA,CAAC,CAACC,YAAY,IAAIxB,KAAK,EAAE;UAC3B,oBACEf,OAAA;YAAA+B,QAAA,gBACE/B,OAAA;cAAA+B,QAAA,EAAMO,CAAC,CAACE;YAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO,eACpBnC,OAAA;cACEyC,GAAG,EAAG,mCAAkCH,CAAC,CAACI,WAAY;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACnD,eACPnC,OAAA;cAAA+B,QAAA,EAAMO,CAAC,CAACQ;YAAQ;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACnB;QAEV;MACF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA,gBACL;AAEP,CAAC;AAAC/B,EAAA,CAvFID,MAAM;AAAA6C,EAAA,GAAN7C,MAAM;AAyFZ,eAAeA,MAAM;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}