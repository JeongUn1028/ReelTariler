{"ast":null,"code":"var _jsxFileName = \"/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header/HeaderMovie.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport YouTube from \"react-youtube\";\nimport ids from \"../../../channelId/ids\";\nimport { useState, useEffect } from \"react\";\nimport { YOUTUBEURL, PLAYLISTS, apiKey, PLAYLISTSITEMS } from \"../../../API/apis\";\n\n// UCSB5FOwUVnAhGo_o99IhxYA\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderMovie = () => {\n  _s();\n  const [plistItems, setPlistItems] = useState({});\n  const [plist, setPlist] = useState({});\n  const [videoId, setVideoId] = useState(\"\");\n  const [plistId, setPlistId] = useState(\"\");\n  const Playlist = async () => {\n    try {\n      const json = await (await fetch(`${YOUTUBEURL}${PLAYLISTS}?key=${apiKey}&channelId=${ids.MarvelKorea}&part=snippet`)).json();\n      const plistId = json.items;\n      const plistsId = plistId[0].id;\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      const json = await (await fetch(`${YOUTUBEURL}${PLAYLISTSITEMS}?key=${apiKey}&playlistId=${plistId}&part=snippet`)).json();\n      console.log(json);\n      setVideoId(json.items[0].snippet.resourceId.videoId);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // const PlaylistItems = async ({plistsId}) => {\n  //   console.log(plistsId);\n  //   try {\n  //     const json = await (\n  //       await fetch(\n  //         `${YOUTUBEURL}${PLAYLISTSITEMS}?key=${apiKey}&playlistId=${plistsId}&part=snippet`\n  //       )\n  //     ).json();\n  //     console.log(json);\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n  useEffect(() => {\n    Playlist();\n    // PlaylistItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: videoId,\n      opts: {\n        width: \"100%\",\n        height: \"460px\",\n        playerVars: {\n          autoplay: 0,\n          //자동재생 O\n          rel: 0,\n          modestbranding: 1 // 컨트롤 바에 youtube 로고를 표시하지 않음\n        }\n      }\n      //이벤트 리스너\n      ,\n      onEnd: e => {\n        e.target.stopVideo(0);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderMovie, \"xM7Do4xXdo+WQQl/eIepCqoa4/o=\");\n_c = HeaderMovie;\nexport default HeaderMovie;\nvar _c;\n$RefreshReg$(_c, \"HeaderMovie\");","map":{"version":3,"names":["React","styled","YouTube","ids","useState","useEffect","YOUTUBEURL","PLAYLISTS","apiKey","PLAYLISTSITEMS","jsxDEV","_jsxDEV","HeaderMovie","_s","plistItems","setPlistItems","plist","setPlist","videoId","setVideoId","plistId","setPlistId","Playlist","json","fetch","MarvelKorea","items","plistsId","id","err","console","log","snippet","resourceId","children","opts","width","height","playerVars","autoplay","rel","modestbranding","onEnd","e","target","stopVideo","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ijeong-un/CatchMovie/MovieProject/mymovie/src/components/part/Header/HeaderMovie.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport YouTube from \"react-youtube\";\nimport ids from \"../../../channelId/ids\";\nimport { useState, useEffect } from \"react\";\nimport {\n  YOUTUBEURL,\n  PLAYLISTS,\n  apiKey,\n  PLAYLISTSITEMS,\n} from \"../../../API/apis\";\n\n// UCSB5FOwUVnAhGo_o99IhxYA\n\nconst HeaderMovie = () => {\n\n  const [plistItems, setPlistItems] = useState({});\n  const [plist, setPlist] = useState({});\n  const [videoId, setVideoId] = useState(\"\");\n  const [plistId, setPlistId] = useState(\"\");\n\n  const Playlist = async () => {\n    try {\n      const json = await (\n        await fetch(\n          `${YOUTUBEURL}${PLAYLISTS}?key=${apiKey}&channelId=${ids.MarvelKorea}&part=snippet`\n        )\n      ).json();\n      const plistId = json.items;\n      const plistsId = plistId[0].id\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      const json = await (\n        await fetch(\n          `${YOUTUBEURL}${PLAYLISTSITEMS}?key=${apiKey}&playlistId=${plistId}&part=snippet`\n        )\n      ).json();\n      console.log(json);\n      setVideoId(json.items[0].snippet.resourceId.videoId);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // const PlaylistItems = async ({plistsId}) => {\n  //   console.log(plistsId);\n  //   try {\n  //     const json = await (\n  //       await fetch(\n  //         `${YOUTUBEURL}${PLAYLISTSITEMS}?key=${apiKey}&playlistId=${plistsId}&part=snippet`\n  //       )\n  //     ).json();\n  //     console.log(json);\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n  useEffect(() => {\n    Playlist();\n    // PlaylistItems();\n  }, []);\n\n  return (\n    <div>\n      <YouTube\n        videoId={videoId}\n        opts={{\n          width: \"100%\",\n          height: \"460px\",\n          playerVars: {\n            autoplay: 0, //자동재생 O\n            rel: 0,\n            modestbranding: 1, // 컨트롤 바에 youtube 로고를 표시하지 않음\n          },\n        }}\n        //이벤트 리스너\n        onEnd={(e) => {\n          e.target.stopVideo(0);\n        }}\n      />\n      {/* <Player width=\"960px\" height=\"400px\"/> */}\n    </div>\n  );\n};\n\nexport default HeaderMovie;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,GAAG,MAAM,wBAAwB;AACxC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SACEC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,cAAc,QACT,mBAAmB;;AAE1B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMkB,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CACR,GAAElB,UAAW,GAAEC,SAAU,QAAOC,MAAO,cAAaL,GAAG,CAACsB,WAAY,eAAc,CACpF,EACDF,IAAI,EAAE;MACR,MAAMH,OAAO,GAAGG,IAAI,CAACG,KAAK;MAC1B,MAAMC,QAAQ,GAAGP,OAAO,CAAC,CAAC,CAAC,CAACQ,EAAE;IAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;IACA,IAAI;MACF,MAAMN,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CACR,GAAElB,UAAW,GAAEG,cAAe,QAAOD,MAAO,eAAcY,OAAQ,eAAc,CAClF,EACDG,IAAI,EAAE;MACRO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;MACjBJ,UAAU,CAACI,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAACM,OAAO,CAACC,UAAU,CAACf,OAAO,CAAC;IACtD,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAxB,SAAS,CAAC,MAAM;IACdiB,QAAQ,EAAE;IACV;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAuB,QAAA,eACEvB,OAAA,CAACT,OAAO;MACNgB,OAAO,EAAEA,OAAQ;MACjBiB,IAAI,EAAE;QACJC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,OAAO;QACfC,UAAU,EAAE;UACVC,QAAQ,EAAE,CAAC;UAAE;UACbC,GAAG,EAAE,CAAC;UACNC,cAAc,EAAE,CAAC,CAAE;QACrB;MACF;MACA;MAAA;MACAC,KAAK,EAAGC,CAAC,IAAK;QACZA,CAAC,CAACC,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC;MACvB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEE;AAEV,CAAC;AAACpC,EAAA,CAxEID,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AA0EjB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}